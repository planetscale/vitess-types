//
//Copyright 2019 The Vitess Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file contains all the types and servers necessary to make
// RPC calls to VtTablet for the management API.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vitess/tabletmanagerdata/v19/tabletmanagerdata.proto

package tabletmanagerdatav19

import (
	v196 "github.com/planetscale/vitess-types/gen/vitess/binlogdata/v19"
	v194 "github.com/planetscale/vitess-types/gen/vitess/logutil/v19"
	v19 "github.com/planetscale/vitess-types/gen/vitess/query/v19"
	v193 "github.com/planetscale/vitess-types/gen/vitess/replicationdata/v19"
	v191 "github.com/planetscale/vitess-types/gen/vitess/topodata/v19"
	v192 "github.com/planetscale/vitess-types/gen/vitess/vtrpc/v19"
	v195 "github.com/planetscale/vitess-types/gen/vitess/vttime/v19"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This structure allows us to manage tablet selection preferences
// which are eventually passed to a TabletPicker.
type TabletSelectionPreference int32

const (
	TabletSelectionPreference_ANY     TabletSelectionPreference = 0
	TabletSelectionPreference_INORDER TabletSelectionPreference = 1
	TabletSelectionPreference_UNKNOWN TabletSelectionPreference = 3 // Don't change any existing value
)

// Enum value maps for TabletSelectionPreference.
var (
	TabletSelectionPreference_name = map[int32]string{
		0: "ANY",
		1: "INORDER",
		3: "UNKNOWN",
	}
	TabletSelectionPreference_value = map[string]int32{
		"ANY":     0,
		"INORDER": 1,
		"UNKNOWN": 3,
	}
)

func (x TabletSelectionPreference) Enum() *TabletSelectionPreference {
	p := new(TabletSelectionPreference)
	*p = x
	return p
}

func (x TabletSelectionPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TabletSelectionPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_enumTypes[0].Descriptor()
}

func (TabletSelectionPreference) Type() protoreflect.EnumType {
	return &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_enumTypes[0]
}

func (x TabletSelectionPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TabletSelectionPreference.Descriptor instead.
func (TabletSelectionPreference) EnumDescriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{0}
}

type TableDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the table name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the SQL to run to create the table
	Schema string `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	// the columns in the order that will be used to dump and load the data
	Columns []string `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	// the primary key columns in the primary key order
	PrimaryKeyColumns []string `protobuf:"bytes,4,rep,name=primary_key_columns,json=primaryKeyColumns,proto3" json:"primary_key_columns,omitempty"`
	// type is either mysqlctl.TableBaseTable or mysqlctl.TableView
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// how much space the data file takes.
	DataLength uint64 `protobuf:"varint,6,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`
	// approximate number of rows
	RowCount uint64 `protobuf:"varint,7,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	// column names along with their types.
	// NOTE: this is a superset of columns.
	Fields        []*v19.Field `protobuf:"bytes,8,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableDefinition) Reset() {
	*x = TableDefinition{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableDefinition) ProtoMessage() {}

func (x *TableDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableDefinition.ProtoReflect.Descriptor instead.
func (*TableDefinition) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{0}
}

func (x *TableDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableDefinition) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *TableDefinition) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TableDefinition) GetPrimaryKeyColumns() []string {
	if x != nil {
		return x.PrimaryKeyColumns
	}
	return nil
}

func (x *TableDefinition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TableDefinition) GetDataLength() uint64 {
	if x != nil {
		return x.DataLength
	}
	return 0
}

func (x *TableDefinition) GetRowCount() uint64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *TableDefinition) GetFields() []*v19.Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SchemaDefinition struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DatabaseSchema   string                 `protobuf:"bytes,1,opt,name=database_schema,json=databaseSchema,proto3" json:"database_schema,omitempty"`
	TableDefinitions []*TableDefinition     `protobuf:"bytes,2,rep,name=table_definitions,json=tableDefinitions,proto3" json:"table_definitions,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SchemaDefinition) Reset() {
	*x = SchemaDefinition{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaDefinition) ProtoMessage() {}

func (x *SchemaDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaDefinition.ProtoReflect.Descriptor instead.
func (*SchemaDefinition) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{1}
}

func (x *SchemaDefinition) GetDatabaseSchema() string {
	if x != nil {
		return x.DatabaseSchema
	}
	return ""
}

func (x *SchemaDefinition) GetTableDefinitions() []*TableDefinition {
	if x != nil {
		return x.TableDefinitions
	}
	return nil
}

type SchemaChangeResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// before_schema holds the schema before each change.
	BeforeSchema *SchemaDefinition `protobuf:"bytes,1,opt,name=before_schema,json=beforeSchema,proto3" json:"before_schema,omitempty"`
	// after_schema holds the schema after each change.
	AfterSchema   *SchemaDefinition `protobuf:"bytes,2,opt,name=after_schema,json=afterSchema,proto3" json:"after_schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchemaChangeResult) Reset() {
	*x = SchemaChangeResult{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaChangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaChangeResult) ProtoMessage() {}

func (x *SchemaChangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaChangeResult.ProtoReflect.Descriptor instead.
func (*SchemaChangeResult) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{2}
}

func (x *SchemaChangeResult) GetBeforeSchema() *SchemaDefinition {
	if x != nil {
		return x.BeforeSchema
	}
	return nil
}

func (x *SchemaChangeResult) GetAfterSchema() *SchemaDefinition {
	if x != nil {
		return x.AfterSchema
	}
	return nil
}

// UserPermission describes a single row in the mysql.user table
// Primary key is Host+User
// PasswordChecksum is the crc64 of the password, for security reasons
type UserPermission struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Host             string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	User             string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	PasswordChecksum uint64                 `protobuf:"varint,3,opt,name=password_checksum,json=passwordChecksum,proto3" json:"password_checksum,omitempty"`
	Privileges       map[string]string      `protobuf:"bytes,4,rep,name=privileges,proto3" json:"privileges,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UserPermission) Reset() {
	*x = UserPermission{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermission) ProtoMessage() {}

func (x *UserPermission) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermission.ProtoReflect.Descriptor instead.
func (*UserPermission) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{3}
}

func (x *UserPermission) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UserPermission) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserPermission) GetPasswordChecksum() uint64 {
	if x != nil {
		return x.PasswordChecksum
	}
	return 0
}

func (x *UserPermission) GetPrivileges() map[string]string {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// DbPermission describes a single row in the mysql.db table
// Primary key is Host+Db+User
type DbPermission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Db            string                 `protobuf:"bytes,2,opt,name=db,proto3" json:"db,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Privileges    map[string]string      `protobuf:"bytes,4,rep,name=privileges,proto3" json:"privileges,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbPermission) Reset() {
	*x = DbPermission{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbPermission) ProtoMessage() {}

func (x *DbPermission) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbPermission.ProtoReflect.Descriptor instead.
func (*DbPermission) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{4}
}

func (x *DbPermission) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DbPermission) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *DbPermission) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DbPermission) GetPrivileges() map[string]string {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// Permissions have all the rows in mysql.{user,db} tables,
// (all rows are sorted by primary key)
type Permissions struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserPermissions []*UserPermission      `protobuf:"bytes,1,rep,name=user_permissions,json=userPermissions,proto3" json:"user_permissions,omitempty"`
	DbPermissions   []*DbPermission        `protobuf:"bytes,2,rep,name=db_permissions,json=dbPermissions,proto3" json:"db_permissions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{5}
}

func (x *Permissions) GetUserPermissions() []*UserPermission {
	if x != nil {
		return x.UserPermissions
	}
	return nil
}

func (x *Permissions) GetDbPermissions() []*DbPermission {
	if x != nil {
		return x.DbPermissions
	}
	return nil
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       string                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{6}
}

func (x *PingRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       string                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{7}
}

func (x *PingResponse) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type SleepRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// duration is in nanoseconds
	Duration      int64 `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SleepRequest) Reset() {
	*x = SleepRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SleepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SleepRequest) ProtoMessage() {}

func (x *SleepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SleepRequest.ProtoReflect.Descriptor instead.
func (*SleepRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{8}
}

func (x *SleepRequest) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SleepResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SleepResponse) Reset() {
	*x = SleepResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SleepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SleepResponse) ProtoMessage() {}

func (x *SleepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SleepResponse.ProtoReflect.Descriptor instead.
func (*SleepResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{9}
}

type ExecuteHookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Parameters    []string               `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	ExtraEnv      map[string]string      `protobuf:"bytes,3,rep,name=extra_env,json=extraEnv,proto3" json:"extra_env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteHookRequest) Reset() {
	*x = ExecuteHookRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteHookRequest) ProtoMessage() {}

func (x *ExecuteHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteHookRequest.ProtoReflect.Descriptor instead.
func (*ExecuteHookRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{10}
}

func (x *ExecuteHookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecuteHookRequest) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExecuteHookRequest) GetExtraEnv() map[string]string {
	if x != nil {
		return x.ExtraEnv
	}
	return nil
}

type ExecuteHookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExitStatus    int64                  `protobuf:"varint,1,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	Stdout        string                 `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteHookResponse) Reset() {
	*x = ExecuteHookResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteHookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteHookResponse) ProtoMessage() {}

func (x *ExecuteHookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteHookResponse.ProtoReflect.Descriptor instead.
func (*ExecuteHookResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteHookResponse) GetExitStatus() int64 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *ExecuteHookResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ExecuteHookResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type GetSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tables        []string               `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	IncludeViews  bool                   `protobuf:"varint,2,opt,name=include_views,json=includeViews,proto3" json:"include_views,omitempty"`
	ExcludeTables []string               `protobuf:"bytes,3,rep,name=exclude_tables,json=excludeTables,proto3" json:"exclude_tables,omitempty"`
	// TableSchemaOnly specifies whether to limit the results to just table/view
	// schema definition (CREATE TABLE/VIEW statements) and skip column/field information
	TableSchemaOnly bool `protobuf:"varint,4,opt,name=table_schema_only,json=tableSchemaOnly,proto3" json:"table_schema_only,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSchemaRequest) Reset() {
	*x = GetSchemaRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRequest) ProtoMessage() {}

func (x *GetSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{12}
}

func (x *GetSchemaRequest) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *GetSchemaRequest) GetIncludeViews() bool {
	if x != nil {
		return x.IncludeViews
	}
	return false
}

func (x *GetSchemaRequest) GetExcludeTables() []string {
	if x != nil {
		return x.ExcludeTables
	}
	return nil
}

func (x *GetSchemaRequest) GetTableSchemaOnly() bool {
	if x != nil {
		return x.TableSchemaOnly
	}
	return false
}

type GetSchemaResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SchemaDefinition *SchemaDefinition      `protobuf:"bytes,1,opt,name=schema_definition,json=schemaDefinition,proto3" json:"schema_definition,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetSchemaResponse) Reset() {
	*x = GetSchemaResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponse) ProtoMessage() {}

func (x *GetSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetSchemaResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{13}
}

func (x *GetSchemaResponse) GetSchemaDefinition() *SchemaDefinition {
	if x != nil {
		return x.SchemaDefinition
	}
	return nil
}

type GetPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermissionsRequest) Reset() {
	*x = GetPermissionsRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsRequest) ProtoMessage() {}

func (x *GetPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{14}
}

type GetPermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   *Permissions           `protobuf:"bytes,1,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermissionsResponse) Reset() {
	*x = GetPermissionsResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsResponse) ProtoMessage() {}

func (x *GetPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{15}
}

func (x *GetPermissionsResponse) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type SetReadOnlyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReadOnlyRequest) Reset() {
	*x = SetReadOnlyRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReadOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadOnlyRequest) ProtoMessage() {}

func (x *SetReadOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadOnlyRequest.ProtoReflect.Descriptor instead.
func (*SetReadOnlyRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{16}
}

type SetReadOnlyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReadOnlyResponse) Reset() {
	*x = SetReadOnlyResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReadOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadOnlyResponse) ProtoMessage() {}

func (x *SetReadOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadOnlyResponse.ProtoReflect.Descriptor instead.
func (*SetReadOnlyResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{17}
}

type SetReadWriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReadWriteRequest) Reset() {
	*x = SetReadWriteRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReadWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadWriteRequest) ProtoMessage() {}

func (x *SetReadWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadWriteRequest.ProtoReflect.Descriptor instead.
func (*SetReadWriteRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{18}
}

type SetReadWriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReadWriteResponse) Reset() {
	*x = SetReadWriteResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReadWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadWriteResponse) ProtoMessage() {}

func (x *SetReadWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadWriteResponse.ProtoReflect.Descriptor instead.
func (*SetReadWriteResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{19}
}

type ChangeTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TabletType    v191.TabletType        `protobuf:"varint,1,opt,name=tablet_type,json=tabletType,proto3,enum=vitess.topodata.v19.TabletType" json:"tablet_type,omitempty"`
	SemiSync      bool                   `protobuf:"varint,2,opt,name=semiSync,proto3" json:"semiSync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTypeRequest) Reset() {
	*x = ChangeTypeRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTypeRequest) ProtoMessage() {}

func (x *ChangeTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTypeRequest.ProtoReflect.Descriptor instead.
func (*ChangeTypeRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{20}
}

func (x *ChangeTypeRequest) GetTabletType() v191.TabletType {
	if x != nil {
		return x.TabletType
	}
	return v191.TabletType(0)
}

func (x *ChangeTypeRequest) GetSemiSync() bool {
	if x != nil {
		return x.SemiSync
	}
	return false
}

type ChangeTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTypeResponse) Reset() {
	*x = ChangeTypeResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTypeResponse) ProtoMessage() {}

func (x *ChangeTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTypeResponse.ProtoReflect.Descriptor instead.
func (*ChangeTypeResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{21}
}

type RefreshStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshStateRequest) Reset() {
	*x = RefreshStateRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshStateRequest) ProtoMessage() {}

func (x *RefreshStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshStateRequest.ProtoReflect.Descriptor instead.
func (*RefreshStateRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{22}
}

type RefreshStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshStateResponse) Reset() {
	*x = RefreshStateResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshStateResponse) ProtoMessage() {}

func (x *RefreshStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshStateResponse.ProtoReflect.Descriptor instead.
func (*RefreshStateResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{23}
}

type RunHealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunHealthCheckRequest) Reset() {
	*x = RunHealthCheckRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunHealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunHealthCheckRequest) ProtoMessage() {}

func (x *RunHealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunHealthCheckRequest.ProtoReflect.Descriptor instead.
func (*RunHealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{24}
}

type RunHealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunHealthCheckResponse) Reset() {
	*x = RunHealthCheckResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunHealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunHealthCheckResponse) ProtoMessage() {}

func (x *RunHealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunHealthCheckResponse.ProtoReflect.Descriptor instead.
func (*RunHealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{25}
}

type ReloadSchemaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// wait_position allows scheduling a schema reload to occur after a
	// given DDL has replicated to this server, by specifying a replication
	// position to wait for. Leave empty to trigger the reload immediately.
	WaitPosition  string `protobuf:"bytes,1,opt,name=wait_position,json=waitPosition,proto3" json:"wait_position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadSchemaRequest) Reset() {
	*x = ReloadSchemaRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadSchemaRequest) ProtoMessage() {}

func (x *ReloadSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadSchemaRequest.ProtoReflect.Descriptor instead.
func (*ReloadSchemaRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{26}
}

func (x *ReloadSchemaRequest) GetWaitPosition() string {
	if x != nil {
		return x.WaitPosition
	}
	return ""
}

type ReloadSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadSchemaResponse) Reset() {
	*x = ReloadSchemaResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadSchemaResponse) ProtoMessage() {}

func (x *ReloadSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadSchemaResponse.ProtoReflect.Descriptor instead.
func (*ReloadSchemaResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{27}
}

type PreflightSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changes       []string               `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreflightSchemaRequest) Reset() {
	*x = PreflightSchemaRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreflightSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreflightSchemaRequest) ProtoMessage() {}

func (x *PreflightSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreflightSchemaRequest.ProtoReflect.Descriptor instead.
func (*PreflightSchemaRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{28}
}

func (x *PreflightSchemaRequest) GetChanges() []string {
	if x != nil {
		return x.Changes
	}
	return nil
}

type PreflightSchemaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// change_results has for each change the schema before and after it.
	// The number of elements is identical to the length of "changes" in the request.
	ChangeResults []*SchemaChangeResult `protobuf:"bytes,1,rep,name=change_results,json=changeResults,proto3" json:"change_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreflightSchemaResponse) Reset() {
	*x = PreflightSchemaResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreflightSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreflightSchemaResponse) ProtoMessage() {}

func (x *PreflightSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreflightSchemaResponse.ProtoReflect.Descriptor instead.
func (*PreflightSchemaResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{29}
}

func (x *PreflightSchemaResponse) GetChangeResults() []*SchemaChangeResult {
	if x != nil {
		return x.ChangeResults
	}
	return nil
}

type ApplySchemaRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Sql              string                 `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	Force            bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	AllowReplication bool                   `protobuf:"varint,3,opt,name=allow_replication,json=allowReplication,proto3" json:"allow_replication,omitempty"`
	BeforeSchema     *SchemaDefinition      `protobuf:"bytes,4,opt,name=before_schema,json=beforeSchema,proto3" json:"before_schema,omitempty"`
	AfterSchema      *SchemaDefinition      `protobuf:"bytes,5,opt,name=after_schema,json=afterSchema,proto3" json:"after_schema,omitempty"`
	SqlMode          string                 `protobuf:"bytes,6,opt,name=sql_mode,json=sqlMode,proto3" json:"sql_mode,omitempty"`
	// BatchSize indicates how many queries to apply together
	BatchSize     int64 `protobuf:"varint,7,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplySchemaRequest) Reset() {
	*x = ApplySchemaRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplySchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplySchemaRequest) ProtoMessage() {}

func (x *ApplySchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplySchemaRequest.ProtoReflect.Descriptor instead.
func (*ApplySchemaRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{30}
}

func (x *ApplySchemaRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ApplySchemaRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ApplySchemaRequest) GetAllowReplication() bool {
	if x != nil {
		return x.AllowReplication
	}
	return false
}

func (x *ApplySchemaRequest) GetBeforeSchema() *SchemaDefinition {
	if x != nil {
		return x.BeforeSchema
	}
	return nil
}

func (x *ApplySchemaRequest) GetAfterSchema() *SchemaDefinition {
	if x != nil {
		return x.AfterSchema
	}
	return nil
}

func (x *ApplySchemaRequest) GetSqlMode() string {
	if x != nil {
		return x.SqlMode
	}
	return ""
}

func (x *ApplySchemaRequest) GetBatchSize() int64 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type ApplySchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BeforeSchema  *SchemaDefinition      `protobuf:"bytes,1,opt,name=before_schema,json=beforeSchema,proto3" json:"before_schema,omitempty"`
	AfterSchema   *SchemaDefinition      `protobuf:"bytes,2,opt,name=after_schema,json=afterSchema,proto3" json:"after_schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplySchemaResponse) Reset() {
	*x = ApplySchemaResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplySchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplySchemaResponse) ProtoMessage() {}

func (x *ApplySchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplySchemaResponse.ProtoReflect.Descriptor instead.
func (*ApplySchemaResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{31}
}

func (x *ApplySchemaResponse) GetBeforeSchema() *SchemaDefinition {
	if x != nil {
		return x.BeforeSchema
	}
	return nil
}

func (x *ApplySchemaResponse) GetAfterSchema() *SchemaDefinition {
	if x != nil {
		return x.AfterSchema
	}
	return nil
}

type LockTablesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockTablesRequest) Reset() {
	*x = LockTablesRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockTablesRequest) ProtoMessage() {}

func (x *LockTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockTablesRequest.ProtoReflect.Descriptor instead.
func (*LockTablesRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{32}
}

type LockTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockTablesResponse) Reset() {
	*x = LockTablesResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockTablesResponse) ProtoMessage() {}

func (x *LockTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockTablesResponse.ProtoReflect.Descriptor instead.
func (*LockTablesResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{33}
}

type UnlockTablesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockTablesRequest) Reset() {
	*x = UnlockTablesRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockTablesRequest) ProtoMessage() {}

func (x *UnlockTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockTablesRequest.ProtoReflect.Descriptor instead.
func (*UnlockTablesRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{34}
}

type UnlockTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockTablesResponse) Reset() {
	*x = UnlockTablesResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockTablesResponse) ProtoMessage() {}

func (x *UnlockTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockTablesResponse.ProtoReflect.Descriptor instead.
func (*UnlockTablesResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{35}
}

type ExecuteQueryRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Query   []byte                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DbName  string                 `protobuf:"bytes,2,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	MaxRows uint64                 `protobuf:"varint,3,opt,name=max_rows,json=maxRows,proto3" json:"max_rows,omitempty"`
	// caller_id identifies the caller. This is the effective caller ID,
	// set by the application to further identify the caller.
	CallerId      *v192.CallerID `protobuf:"bytes,4,opt,name=caller_id,json=callerId,proto3" json:"caller_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryRequest) Reset() {
	*x = ExecuteQueryRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryRequest) ProtoMessage() {}

func (x *ExecuteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecuteQueryRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{36}
}

func (x *ExecuteQueryRequest) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ExecuteQueryRequest) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *ExecuteQueryRequest) GetMaxRows() uint64 {
	if x != nil {
		return x.MaxRows
	}
	return 0
}

func (x *ExecuteQueryRequest) GetCallerId() *v192.CallerID {
	if x != nil {
		return x.CallerId
	}
	return nil
}

type ExecuteQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryResponse) Reset() {
	*x = ExecuteQueryResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResponse) ProtoMessage() {}

func (x *ExecuteQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecuteQueryResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{37}
}

func (x *ExecuteQueryResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ExecuteFetchAsDbaRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Query                   []byte                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DbName                  string                 `protobuf:"bytes,2,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	MaxRows                 uint64                 `protobuf:"varint,3,opt,name=max_rows,json=maxRows,proto3" json:"max_rows,omitempty"`
	DisableBinlogs          bool                   `protobuf:"varint,4,opt,name=disable_binlogs,json=disableBinlogs,proto3" json:"disable_binlogs,omitempty"`
	ReloadSchema            bool                   `protobuf:"varint,5,opt,name=reload_schema,json=reloadSchema,proto3" json:"reload_schema,omitempty"`
	DisableForeignKeyChecks bool                   `protobuf:"varint,6,opt,name=disable_foreign_key_checks,json=disableForeignKeyChecks,proto3" json:"disable_foreign_key_checks,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ExecuteFetchAsDbaRequest) Reset() {
	*x = ExecuteFetchAsDbaRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteFetchAsDbaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFetchAsDbaRequest) ProtoMessage() {}

func (x *ExecuteFetchAsDbaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFetchAsDbaRequest.ProtoReflect.Descriptor instead.
func (*ExecuteFetchAsDbaRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{38}
}

func (x *ExecuteFetchAsDbaRequest) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ExecuteFetchAsDbaRequest) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *ExecuteFetchAsDbaRequest) GetMaxRows() uint64 {
	if x != nil {
		return x.MaxRows
	}
	return 0
}

func (x *ExecuteFetchAsDbaRequest) GetDisableBinlogs() bool {
	if x != nil {
		return x.DisableBinlogs
	}
	return false
}

func (x *ExecuteFetchAsDbaRequest) GetReloadSchema() bool {
	if x != nil {
		return x.ReloadSchema
	}
	return false
}

func (x *ExecuteFetchAsDbaRequest) GetDisableForeignKeyChecks() bool {
	if x != nil {
		return x.DisableForeignKeyChecks
	}
	return false
}

type ExecuteFetchAsDbaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteFetchAsDbaResponse) Reset() {
	*x = ExecuteFetchAsDbaResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteFetchAsDbaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFetchAsDbaResponse) ProtoMessage() {}

func (x *ExecuteFetchAsDbaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFetchAsDbaResponse.ProtoReflect.Descriptor instead.
func (*ExecuteFetchAsDbaResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{39}
}

func (x *ExecuteFetchAsDbaResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ExecuteFetchAsAllPrivsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         []byte                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DbName        string                 `protobuf:"bytes,2,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	MaxRows       uint64                 `protobuf:"varint,3,opt,name=max_rows,json=maxRows,proto3" json:"max_rows,omitempty"`
	ReloadSchema  bool                   `protobuf:"varint,4,opt,name=reload_schema,json=reloadSchema,proto3" json:"reload_schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteFetchAsAllPrivsRequest) Reset() {
	*x = ExecuteFetchAsAllPrivsRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteFetchAsAllPrivsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFetchAsAllPrivsRequest) ProtoMessage() {}

func (x *ExecuteFetchAsAllPrivsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFetchAsAllPrivsRequest.ProtoReflect.Descriptor instead.
func (*ExecuteFetchAsAllPrivsRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{40}
}

func (x *ExecuteFetchAsAllPrivsRequest) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ExecuteFetchAsAllPrivsRequest) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *ExecuteFetchAsAllPrivsRequest) GetMaxRows() uint64 {
	if x != nil {
		return x.MaxRows
	}
	return 0
}

func (x *ExecuteFetchAsAllPrivsRequest) GetReloadSchema() bool {
	if x != nil {
		return x.ReloadSchema
	}
	return false
}

type ExecuteFetchAsAllPrivsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteFetchAsAllPrivsResponse) Reset() {
	*x = ExecuteFetchAsAllPrivsResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteFetchAsAllPrivsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFetchAsAllPrivsResponse) ProtoMessage() {}

func (x *ExecuteFetchAsAllPrivsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFetchAsAllPrivsResponse.ProtoReflect.Descriptor instead.
func (*ExecuteFetchAsAllPrivsResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{41}
}

func (x *ExecuteFetchAsAllPrivsResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ExecuteFetchAsAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         []byte                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	MaxRows       uint64                 `protobuf:"varint,2,opt,name=max_rows,json=maxRows,proto3" json:"max_rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteFetchAsAppRequest) Reset() {
	*x = ExecuteFetchAsAppRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteFetchAsAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFetchAsAppRequest) ProtoMessage() {}

func (x *ExecuteFetchAsAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFetchAsAppRequest.ProtoReflect.Descriptor instead.
func (*ExecuteFetchAsAppRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{42}
}

func (x *ExecuteFetchAsAppRequest) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ExecuteFetchAsAppRequest) GetMaxRows() uint64 {
	if x != nil {
		return x.MaxRows
	}
	return 0
}

type ExecuteFetchAsAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteFetchAsAppResponse) Reset() {
	*x = ExecuteFetchAsAppResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteFetchAsAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFetchAsAppResponse) ProtoMessage() {}

func (x *ExecuteFetchAsAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFetchAsAppResponse.ProtoReflect.Descriptor instead.
func (*ExecuteFetchAsAppResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{43}
}

func (x *ExecuteFetchAsAppResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReplicationStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationStatusRequest) Reset() {
	*x = ReplicationStatusRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationStatusRequest) ProtoMessage() {}

func (x *ReplicationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationStatusRequest.ProtoReflect.Descriptor instead.
func (*ReplicationStatusRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{44}
}

type ReplicationStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *v193.Status           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationStatusResponse) Reset() {
	*x = ReplicationStatusResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationStatusResponse) ProtoMessage() {}

func (x *ReplicationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationStatusResponse.ProtoReflect.Descriptor instead.
func (*ReplicationStatusResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{45}
}

func (x *ReplicationStatusResponse) GetStatus() *v193.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PrimaryStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimaryStatusRequest) Reset() {
	*x = PrimaryStatusRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimaryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryStatusRequest) ProtoMessage() {}

func (x *PrimaryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryStatusRequest.ProtoReflect.Descriptor instead.
func (*PrimaryStatusRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{46}
}

type PrimaryStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *v193.PrimaryStatus    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimaryStatusResponse) Reset() {
	*x = PrimaryStatusResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimaryStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryStatusResponse) ProtoMessage() {}

func (x *PrimaryStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryStatusResponse.ProtoReflect.Descriptor instead.
func (*PrimaryStatusResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{47}
}

func (x *PrimaryStatusResponse) GetStatus() *v193.PrimaryStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type PrimaryPositionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimaryPositionRequest) Reset() {
	*x = PrimaryPositionRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimaryPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryPositionRequest) ProtoMessage() {}

func (x *PrimaryPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryPositionRequest.ProtoReflect.Descriptor instead.
func (*PrimaryPositionRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{48}
}

type PrimaryPositionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      string                 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimaryPositionResponse) Reset() {
	*x = PrimaryPositionResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimaryPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryPositionResponse) ProtoMessage() {}

func (x *PrimaryPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryPositionResponse.ProtoReflect.Descriptor instead.
func (*PrimaryPositionResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{49}
}

func (x *PrimaryPositionResponse) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type WaitForPositionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      string                 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitForPositionRequest) Reset() {
	*x = WaitForPositionRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForPositionRequest) ProtoMessage() {}

func (x *WaitForPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForPositionRequest.ProtoReflect.Descriptor instead.
func (*WaitForPositionRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{50}
}

func (x *WaitForPositionRequest) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type WaitForPositionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitForPositionResponse) Reset() {
	*x = WaitForPositionResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForPositionResponse) ProtoMessage() {}

func (x *WaitForPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForPositionResponse.ProtoReflect.Descriptor instead.
func (*WaitForPositionResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{51}
}

type StopReplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicationRequest) Reset() {
	*x = StopReplicationRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationRequest) ProtoMessage() {}

func (x *StopReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationRequest.ProtoReflect.Descriptor instead.
func (*StopReplicationRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{52}
}

type StopReplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicationResponse) Reset() {
	*x = StopReplicationResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationResponse) ProtoMessage() {}

func (x *StopReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationResponse.ProtoReflect.Descriptor instead.
func (*StopReplicationResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{53}
}

type StopReplicationMinimumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      string                 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	WaitTimeout   int64                  `protobuf:"varint,2,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicationMinimumRequest) Reset() {
	*x = StopReplicationMinimumRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationMinimumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationMinimumRequest) ProtoMessage() {}

func (x *StopReplicationMinimumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationMinimumRequest.ProtoReflect.Descriptor instead.
func (*StopReplicationMinimumRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{54}
}

func (x *StopReplicationMinimumRequest) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *StopReplicationMinimumRequest) GetWaitTimeout() int64 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

type StopReplicationMinimumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      string                 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicationMinimumResponse) Reset() {
	*x = StopReplicationMinimumResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationMinimumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationMinimumResponse) ProtoMessage() {}

func (x *StopReplicationMinimumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationMinimumResponse.ProtoReflect.Descriptor instead.
func (*StopReplicationMinimumResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{55}
}

func (x *StopReplicationMinimumResponse) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type StartReplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemiSync      bool                   `protobuf:"varint,1,opt,name=semiSync,proto3" json:"semiSync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicationRequest) Reset() {
	*x = StartReplicationRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicationRequest) ProtoMessage() {}

func (x *StartReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicationRequest.ProtoReflect.Descriptor instead.
func (*StartReplicationRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{56}
}

func (x *StartReplicationRequest) GetSemiSync() bool {
	if x != nil {
		return x.SemiSync
	}
	return false
}

type StartReplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicationResponse) Reset() {
	*x = StartReplicationResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicationResponse) ProtoMessage() {}

func (x *StartReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicationResponse.ProtoReflect.Descriptor instead.
func (*StartReplicationResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{57}
}

type StartReplicationUntilAfterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      string                 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	WaitTimeout   int64                  `protobuf:"varint,2,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicationUntilAfterRequest) Reset() {
	*x = StartReplicationUntilAfterRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicationUntilAfterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicationUntilAfterRequest) ProtoMessage() {}

func (x *StartReplicationUntilAfterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicationUntilAfterRequest.ProtoReflect.Descriptor instead.
func (*StartReplicationUntilAfterRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{58}
}

func (x *StartReplicationUntilAfterRequest) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *StartReplicationUntilAfterRequest) GetWaitTimeout() int64 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

type StartReplicationUntilAfterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicationUntilAfterResponse) Reset() {
	*x = StartReplicationUntilAfterResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicationUntilAfterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicationUntilAfterResponse) ProtoMessage() {}

func (x *StartReplicationUntilAfterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicationUntilAfterResponse.ProtoReflect.Descriptor instead.
func (*StartReplicationUntilAfterResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{59}
}

type GetReplicasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicasRequest) Reset() {
	*x = GetReplicasRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicasRequest) ProtoMessage() {}

func (x *GetReplicasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicasRequest.ProtoReflect.Descriptor instead.
func (*GetReplicasRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{60}
}

type GetReplicasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addrs         []string               `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicasResponse) Reset() {
	*x = GetReplicasResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicasResponse) ProtoMessage() {}

func (x *GetReplicasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicasResponse.ProtoReflect.Descriptor instead.
func (*GetReplicasResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{61}
}

func (x *GetReplicasResponse) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type ResetReplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetReplicationRequest) Reset() {
	*x = ResetReplicationRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetReplicationRequest) ProtoMessage() {}

func (x *ResetReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetReplicationRequest.ProtoReflect.Descriptor instead.
func (*ResetReplicationRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{62}
}

type ResetReplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetReplicationResponse) Reset() {
	*x = ResetReplicationResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetReplicationResponse) ProtoMessage() {}

func (x *ResetReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetReplicationResponse.ProtoReflect.Descriptor instead.
func (*ResetReplicationResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{63}
}

type VReplicationExecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VReplicationExecRequest) Reset() {
	*x = VReplicationExecRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VReplicationExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VReplicationExecRequest) ProtoMessage() {}

func (x *VReplicationExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VReplicationExecRequest.ProtoReflect.Descriptor instead.
func (*VReplicationExecRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{64}
}

func (x *VReplicationExecRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type VReplicationExecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VReplicationExecResponse) Reset() {
	*x = VReplicationExecResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VReplicationExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VReplicationExecResponse) ProtoMessage() {}

func (x *VReplicationExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VReplicationExecResponse.ProtoReflect.Descriptor instead.
func (*VReplicationExecResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{65}
}

func (x *VReplicationExecResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VReplicationWaitForPosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position      string                 `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VReplicationWaitForPosRequest) Reset() {
	*x = VReplicationWaitForPosRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VReplicationWaitForPosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VReplicationWaitForPosRequest) ProtoMessage() {}

func (x *VReplicationWaitForPosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VReplicationWaitForPosRequest.ProtoReflect.Descriptor instead.
func (*VReplicationWaitForPosRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{66}
}

func (x *VReplicationWaitForPosRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VReplicationWaitForPosRequest) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type VReplicationWaitForPosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VReplicationWaitForPosResponse) Reset() {
	*x = VReplicationWaitForPosResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VReplicationWaitForPosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VReplicationWaitForPosResponse) ProtoMessage() {}

func (x *VReplicationWaitForPosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VReplicationWaitForPosResponse.ProtoReflect.Descriptor instead.
func (*VReplicationWaitForPosResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{67}
}

type InitPrimaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemiSync      bool                   `protobuf:"varint,1,opt,name=semiSync,proto3" json:"semiSync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitPrimaryRequest) Reset() {
	*x = InitPrimaryRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitPrimaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPrimaryRequest) ProtoMessage() {}

func (x *InitPrimaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPrimaryRequest.ProtoReflect.Descriptor instead.
func (*InitPrimaryRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{68}
}

func (x *InitPrimaryRequest) GetSemiSync() bool {
	if x != nil {
		return x.SemiSync
	}
	return false
}

type InitPrimaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      string                 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitPrimaryResponse) Reset() {
	*x = InitPrimaryResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitPrimaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPrimaryResponse) ProtoMessage() {}

func (x *InitPrimaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPrimaryResponse.ProtoReflect.Descriptor instead.
func (*InitPrimaryResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{69}
}

func (x *InitPrimaryResponse) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type PopulateReparentJournalRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TimeCreatedNs       int64                  `protobuf:"varint,1,opt,name=time_created_ns,json=timeCreatedNs,proto3" json:"time_created_ns,omitempty"`
	ActionName          string                 `protobuf:"bytes,2,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	PrimaryAlias        *v191.TabletAlias      `protobuf:"bytes,3,opt,name=primary_alias,json=primaryAlias,proto3" json:"primary_alias,omitempty"`
	ReplicationPosition string                 `protobuf:"bytes,4,opt,name=replication_position,json=replicationPosition,proto3" json:"replication_position,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PopulateReparentJournalRequest) Reset() {
	*x = PopulateReparentJournalRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopulateReparentJournalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopulateReparentJournalRequest) ProtoMessage() {}

func (x *PopulateReparentJournalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopulateReparentJournalRequest.ProtoReflect.Descriptor instead.
func (*PopulateReparentJournalRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{70}
}

func (x *PopulateReparentJournalRequest) GetTimeCreatedNs() int64 {
	if x != nil {
		return x.TimeCreatedNs
	}
	return 0
}

func (x *PopulateReparentJournalRequest) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *PopulateReparentJournalRequest) GetPrimaryAlias() *v191.TabletAlias {
	if x != nil {
		return x.PrimaryAlias
	}
	return nil
}

func (x *PopulateReparentJournalRequest) GetReplicationPosition() string {
	if x != nil {
		return x.ReplicationPosition
	}
	return ""
}

type PopulateReparentJournalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PopulateReparentJournalResponse) Reset() {
	*x = PopulateReparentJournalResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopulateReparentJournalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopulateReparentJournalResponse) ProtoMessage() {}

func (x *PopulateReparentJournalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopulateReparentJournalResponse.ProtoReflect.Descriptor instead.
func (*PopulateReparentJournalResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{71}
}

type InitReplicaRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Parent              *v191.TabletAlias      `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	ReplicationPosition string                 `protobuf:"bytes,2,opt,name=replication_position,json=replicationPosition,proto3" json:"replication_position,omitempty"`
	TimeCreatedNs       int64                  `protobuf:"varint,3,opt,name=time_created_ns,json=timeCreatedNs,proto3" json:"time_created_ns,omitempty"`
	SemiSync            bool                   `protobuf:"varint,4,opt,name=semiSync,proto3" json:"semiSync,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *InitReplicaRequest) Reset() {
	*x = InitReplicaRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitReplicaRequest) ProtoMessage() {}

func (x *InitReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitReplicaRequest.ProtoReflect.Descriptor instead.
func (*InitReplicaRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{72}
}

func (x *InitReplicaRequest) GetParent() *v191.TabletAlias {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *InitReplicaRequest) GetReplicationPosition() string {
	if x != nil {
		return x.ReplicationPosition
	}
	return ""
}

func (x *InitReplicaRequest) GetTimeCreatedNs() int64 {
	if x != nil {
		return x.TimeCreatedNs
	}
	return 0
}

func (x *InitReplicaRequest) GetSemiSync() bool {
	if x != nil {
		return x.SemiSync
	}
	return false
}

type InitReplicaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitReplicaResponse) Reset() {
	*x = InitReplicaResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitReplicaResponse) ProtoMessage() {}

func (x *InitReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitReplicaResponse.ProtoReflect.Descriptor instead.
func (*InitReplicaResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{73}
}

type DemotePrimaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DemotePrimaryRequest) Reset() {
	*x = DemotePrimaryRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DemotePrimaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemotePrimaryRequest) ProtoMessage() {}

func (x *DemotePrimaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemotePrimaryRequest.ProtoReflect.Descriptor instead.
func (*DemotePrimaryRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{74}
}

type DemotePrimaryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PrimaryStatus represents the response from calling `SHOW MASTER STATUS` on a primary that has been demoted.
	PrimaryStatus *v193.PrimaryStatus `protobuf:"bytes,2,opt,name=primary_status,json=primaryStatus,proto3" json:"primary_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DemotePrimaryResponse) Reset() {
	*x = DemotePrimaryResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DemotePrimaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemotePrimaryResponse) ProtoMessage() {}

func (x *DemotePrimaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemotePrimaryResponse.ProtoReflect.Descriptor instead.
func (*DemotePrimaryResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{75}
}

func (x *DemotePrimaryResponse) GetPrimaryStatus() *v193.PrimaryStatus {
	if x != nil {
		return x.PrimaryStatus
	}
	return nil
}

type UndoDemotePrimaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemiSync      bool                   `protobuf:"varint,1,opt,name=semiSync,proto3" json:"semiSync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UndoDemotePrimaryRequest) Reset() {
	*x = UndoDemotePrimaryRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndoDemotePrimaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoDemotePrimaryRequest) ProtoMessage() {}

func (x *UndoDemotePrimaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndoDemotePrimaryRequest.ProtoReflect.Descriptor instead.
func (*UndoDemotePrimaryRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{76}
}

func (x *UndoDemotePrimaryRequest) GetSemiSync() bool {
	if x != nil {
		return x.SemiSync
	}
	return false
}

type UndoDemotePrimaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UndoDemotePrimaryResponse) Reset() {
	*x = UndoDemotePrimaryResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndoDemotePrimaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoDemotePrimaryResponse) ProtoMessage() {}

func (x *UndoDemotePrimaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndoDemotePrimaryResponse.ProtoReflect.Descriptor instead.
func (*UndoDemotePrimaryResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{77}
}

type ReplicaWasPromotedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaWasPromotedRequest) Reset() {
	*x = ReplicaWasPromotedRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaWasPromotedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaWasPromotedRequest) ProtoMessage() {}

func (x *ReplicaWasPromotedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaWasPromotedRequest.ProtoReflect.Descriptor instead.
func (*ReplicaWasPromotedRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{78}
}

type ReplicaWasPromotedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaWasPromotedResponse) Reset() {
	*x = ReplicaWasPromotedResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaWasPromotedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaWasPromotedResponse) ProtoMessage() {}

func (x *ReplicaWasPromotedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaWasPromotedResponse.ProtoReflect.Descriptor instead.
func (*ReplicaWasPromotedResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{79}
}

type ResetReplicationParametersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetReplicationParametersRequest) Reset() {
	*x = ResetReplicationParametersRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetReplicationParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetReplicationParametersRequest) ProtoMessage() {}

func (x *ResetReplicationParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetReplicationParametersRequest.ProtoReflect.Descriptor instead.
func (*ResetReplicationParametersRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{80}
}

type ResetReplicationParametersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetReplicationParametersResponse) Reset() {
	*x = ResetReplicationParametersResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetReplicationParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetReplicationParametersResponse) ProtoMessage() {}

func (x *ResetReplicationParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetReplicationParametersResponse.ProtoReflect.Descriptor instead.
func (*ResetReplicationParametersResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{81}
}

type FullStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullStatusRequest) Reset() {
	*x = FullStatusRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullStatusRequest) ProtoMessage() {}

func (x *FullStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullStatusRequest.ProtoReflect.Descriptor instead.
func (*FullStatusRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{82}
}

type FullStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *v193.FullStatus       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullStatusResponse) Reset() {
	*x = FullStatusResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullStatusResponse) ProtoMessage() {}

func (x *FullStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullStatusResponse.ProtoReflect.Descriptor instead.
func (*FullStatusResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{83}
}

func (x *FullStatusResponse) GetStatus() *v193.FullStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SetReplicationSourceRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Parent                *v191.TabletAlias      `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	TimeCreatedNs         int64                  `protobuf:"varint,2,opt,name=time_created_ns,json=timeCreatedNs,proto3" json:"time_created_ns,omitempty"`
	ForceStartReplication bool                   `protobuf:"varint,3,opt,name=force_start_replication,json=forceStartReplication,proto3" json:"force_start_replication,omitempty"`
	WaitPosition          string                 `protobuf:"bytes,4,opt,name=wait_position,json=waitPosition,proto3" json:"wait_position,omitempty"`
	SemiSync              bool                   `protobuf:"varint,5,opt,name=semiSync,proto3" json:"semiSync,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SetReplicationSourceRequest) Reset() {
	*x = SetReplicationSourceRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReplicationSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReplicationSourceRequest) ProtoMessage() {}

func (x *SetReplicationSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReplicationSourceRequest.ProtoReflect.Descriptor instead.
func (*SetReplicationSourceRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{84}
}

func (x *SetReplicationSourceRequest) GetParent() *v191.TabletAlias {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *SetReplicationSourceRequest) GetTimeCreatedNs() int64 {
	if x != nil {
		return x.TimeCreatedNs
	}
	return 0
}

func (x *SetReplicationSourceRequest) GetForceStartReplication() bool {
	if x != nil {
		return x.ForceStartReplication
	}
	return false
}

func (x *SetReplicationSourceRequest) GetWaitPosition() string {
	if x != nil {
		return x.WaitPosition
	}
	return ""
}

func (x *SetReplicationSourceRequest) GetSemiSync() bool {
	if x != nil {
		return x.SemiSync
	}
	return false
}

type SetReplicationSourceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReplicationSourceResponse) Reset() {
	*x = SetReplicationSourceResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReplicationSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReplicationSourceResponse) ProtoMessage() {}

func (x *SetReplicationSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReplicationSourceResponse.ProtoReflect.Descriptor instead.
func (*SetReplicationSourceResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{85}
}

type ReplicaWasRestartedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the parent alias the tablet should have
	Parent        *v191.TabletAlias `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaWasRestartedRequest) Reset() {
	*x = ReplicaWasRestartedRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaWasRestartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaWasRestartedRequest) ProtoMessage() {}

func (x *ReplicaWasRestartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaWasRestartedRequest.ProtoReflect.Descriptor instead.
func (*ReplicaWasRestartedRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{86}
}

func (x *ReplicaWasRestartedRequest) GetParent() *v191.TabletAlias {
	if x != nil {
		return x.Parent
	}
	return nil
}

type ReplicaWasRestartedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaWasRestartedResponse) Reset() {
	*x = ReplicaWasRestartedResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaWasRestartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaWasRestartedResponse) ProtoMessage() {}

func (x *ReplicaWasRestartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaWasRestartedResponse.ProtoReflect.Descriptor instead.
func (*ReplicaWasRestartedResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{87}
}

type StopReplicationAndGetStatusRequest struct {
	state               protoimpl.MessageState   `protogen:"open.v1"`
	StopReplicationMode v193.StopReplicationMode `protobuf:"varint,1,opt,name=stop_replication_mode,json=stopReplicationMode,proto3,enum=vitess.replicationdata.v19.StopReplicationMode" json:"stop_replication_mode,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StopReplicationAndGetStatusRequest) Reset() {
	*x = StopReplicationAndGetStatusRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationAndGetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationAndGetStatusRequest) ProtoMessage() {}

func (x *StopReplicationAndGetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationAndGetStatusRequest.ProtoReflect.Descriptor instead.
func (*StopReplicationAndGetStatusRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{88}
}

func (x *StopReplicationAndGetStatusRequest) GetStopReplicationMode() v193.StopReplicationMode {
	if x != nil {
		return x.StopReplicationMode
	}
	return v193.StopReplicationMode(0)
}

type StopReplicationAndGetStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status represents the replication status call right before, and right after telling the replica to stop.
	Status        *v193.StopReplicationStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicationAndGetStatusResponse) Reset() {
	*x = StopReplicationAndGetStatusResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationAndGetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationAndGetStatusResponse) ProtoMessage() {}

func (x *StopReplicationAndGetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationAndGetStatusResponse.ProtoReflect.Descriptor instead.
func (*StopReplicationAndGetStatusResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{89}
}

func (x *StopReplicationAndGetStatusResponse) GetStatus() *v193.StopReplicationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type PromoteReplicaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemiSync      bool                   `protobuf:"varint,1,opt,name=semiSync,proto3" json:"semiSync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoteReplicaRequest) Reset() {
	*x = PromoteReplicaRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoteReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteReplicaRequest) ProtoMessage() {}

func (x *PromoteReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteReplicaRequest.ProtoReflect.Descriptor instead.
func (*PromoteReplicaRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{90}
}

func (x *PromoteReplicaRequest) GetSemiSync() bool {
	if x != nil {
		return x.SemiSync
	}
	return false
}

type PromoteReplicaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      string                 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoteReplicaResponse) Reset() {
	*x = PromoteReplicaResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoteReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteReplicaResponse) ProtoMessage() {}

func (x *PromoteReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteReplicaResponse.ProtoReflect.Descriptor instead.
func (*PromoteReplicaResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{91}
}

func (x *PromoteReplicaResponse) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type BackupRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Concurrency  int32                  `protobuf:"varint,1,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	AllowPrimary bool                   `protobuf:"varint,2,opt,name=allow_primary,json=allowPrimary,proto3" json:"allow_primary,omitempty"`
	// IncrementalFromPos indicates a position of a previous backup. When this value is non-empty
	// then the backup becomes incremental and applies as of given position.
	IncrementalFromPos string `protobuf:"bytes,3,opt,name=incremental_from_pos,json=incrementalFromPos,proto3" json:"incremental_from_pos,omitempty"`
	// UpgradeSafe indicates if the backup should be taken with innodb_fast_shutdown=0
	// so that it's a backup that can be used for an upgrade.
	UpgradeSafe   bool `protobuf:"varint,4,opt,name=upgrade_safe,json=upgradeSafe,proto3" json:"upgrade_safe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupRequest) Reset() {
	*x = BackupRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRequest) ProtoMessage() {}

func (x *BackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRequest.ProtoReflect.Descriptor instead.
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{92}
}

func (x *BackupRequest) GetConcurrency() int32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *BackupRequest) GetAllowPrimary() bool {
	if x != nil {
		return x.AllowPrimary
	}
	return false
}

func (x *BackupRequest) GetIncrementalFromPos() string {
	if x != nil {
		return x.IncrementalFromPos
	}
	return ""
}

func (x *BackupRequest) GetUpgradeSafe() bool {
	if x != nil {
		return x.UpgradeSafe
	}
	return false
}

type BackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *v194.Event            `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupResponse) Reset() {
	*x = BackupResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupResponse) ProtoMessage() {}

func (x *BackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupResponse.ProtoReflect.Descriptor instead.
func (*BackupResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{93}
}

func (x *BackupResponse) GetEvent() *v194.Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type RestoreFromBackupRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	BackupTime *v195.Time             `protobuf:"bytes,1,opt,name=backup_time,json=backupTime,proto3" json:"backup_time,omitempty"`
	// RestoreToPos indicates a position for a point-in-time recovery. The recovery
	// is expected to utilize one full backup, followed by zero or more incremental backups,
	// that reach the precise desired position
	RestoreToPos string `protobuf:"bytes,2,opt,name=restore_to_pos,json=restoreToPos,proto3" json:"restore_to_pos,omitempty"`
	// Dry run does not actually performs the restore, but validates the steps and availability of backups
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// RestoreToTimestamp, if given, requested an inremental restore up to (and excluding) the given timestamp.
	// RestoreToTimestamp and RestoreToPos are mutually exclusive.
	RestoreToTimestamp *v195.Time `protobuf:"bytes,4,opt,name=restore_to_timestamp,json=restoreToTimestamp,proto3" json:"restore_to_timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RestoreFromBackupRequest) Reset() {
	*x = RestoreFromBackupRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFromBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFromBackupRequest) ProtoMessage() {}

func (x *RestoreFromBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFromBackupRequest.ProtoReflect.Descriptor instead.
func (*RestoreFromBackupRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{94}
}

func (x *RestoreFromBackupRequest) GetBackupTime() *v195.Time {
	if x != nil {
		return x.BackupTime
	}
	return nil
}

func (x *RestoreFromBackupRequest) GetRestoreToPos() string {
	if x != nil {
		return x.RestoreToPos
	}
	return ""
}

func (x *RestoreFromBackupRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *RestoreFromBackupRequest) GetRestoreToTimestamp() *v195.Time {
	if x != nil {
		return x.RestoreToTimestamp
	}
	return nil
}

type RestoreFromBackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *v194.Event            `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFromBackupResponse) Reset() {
	*x = RestoreFromBackupResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFromBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFromBackupResponse) ProtoMessage() {}

func (x *RestoreFromBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFromBackupResponse.ProtoReflect.Descriptor instead.
func (*RestoreFromBackupResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{95}
}

func (x *RestoreFromBackupResponse) GetEvent() *v194.Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type CreateVReplicationWorkflowRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Workflow     string                 `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	BinlogSource []*v196.BinlogSource   `protobuf:"bytes,2,rep,name=binlog_source,json=binlogSource,proto3" json:"binlog_source,omitempty"`
	// Optional parameters.
	Cells []string `protobuf:"bytes,3,rep,name=cells,proto3" json:"cells,omitempty"`
	// TabletTypes is the list of tablet types to use when selecting source tablets.
	TabletTypes               []v191.TabletType                `protobuf:"varint,4,rep,packed,name=tablet_types,json=tabletTypes,proto3,enum=vitess.topodata.v19.TabletType" json:"tablet_types,omitempty"`
	TabletSelectionPreference TabletSelectionPreference        `protobuf:"varint,5,opt,name=tablet_selection_preference,json=tabletSelectionPreference,proto3,enum=vitess.tabletmanagerdata.v19.TabletSelectionPreference" json:"tablet_selection_preference,omitempty"`
	WorkflowType              v196.VReplicationWorkflowType    `protobuf:"varint,6,opt,name=workflow_type,json=workflowType,proto3,enum=vitess.binlogdata.v19.VReplicationWorkflowType" json:"workflow_type,omitempty"`
	WorkflowSubType           v196.VReplicationWorkflowSubType `protobuf:"varint,7,opt,name=workflow_sub_type,json=workflowSubType,proto3,enum=vitess.binlogdata.v19.VReplicationWorkflowSubType" json:"workflow_sub_type,omitempty"`
	// DeferSecondaryKeys specifies if secondary keys should be created in one shot after table
	// copy finishes.
	DeferSecondaryKeys bool `protobuf:"varint,8,opt,name=defer_secondary_keys,json=deferSecondaryKeys,proto3" json:"defer_secondary_keys,omitempty"`
	// AutoStart specifies if the workflow should be started when created.
	AutoStart bool `protobuf:"varint,9,opt,name=auto_start,json=autoStart,proto3" json:"auto_start,omitempty"`
	// Should the workflow stop after the copy phase.
	StopAfterCopy bool `protobuf:"varint,10,opt,name=stop_after_copy,json=stopAfterCopy,proto3" json:"stop_after_copy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVReplicationWorkflowRequest) Reset() {
	*x = CreateVReplicationWorkflowRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVReplicationWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVReplicationWorkflowRequest) ProtoMessage() {}

func (x *CreateVReplicationWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVReplicationWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateVReplicationWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{96}
}

func (x *CreateVReplicationWorkflowRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *CreateVReplicationWorkflowRequest) GetBinlogSource() []*v196.BinlogSource {
	if x != nil {
		return x.BinlogSource
	}
	return nil
}

func (x *CreateVReplicationWorkflowRequest) GetCells() []string {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *CreateVReplicationWorkflowRequest) GetTabletTypes() []v191.TabletType {
	if x != nil {
		return x.TabletTypes
	}
	return nil
}

func (x *CreateVReplicationWorkflowRequest) GetTabletSelectionPreference() TabletSelectionPreference {
	if x != nil {
		return x.TabletSelectionPreference
	}
	return TabletSelectionPreference_ANY
}

func (x *CreateVReplicationWorkflowRequest) GetWorkflowType() v196.VReplicationWorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return v196.VReplicationWorkflowType(0)
}

func (x *CreateVReplicationWorkflowRequest) GetWorkflowSubType() v196.VReplicationWorkflowSubType {
	if x != nil {
		return x.WorkflowSubType
	}
	return v196.VReplicationWorkflowSubType(0)
}

func (x *CreateVReplicationWorkflowRequest) GetDeferSecondaryKeys() bool {
	if x != nil {
		return x.DeferSecondaryKeys
	}
	return false
}

func (x *CreateVReplicationWorkflowRequest) GetAutoStart() bool {
	if x != nil {
		return x.AutoStart
	}
	return false
}

func (x *CreateVReplicationWorkflowRequest) GetStopAfterCopy() bool {
	if x != nil {
		return x.StopAfterCopy
	}
	return false
}

type CreateVReplicationWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVReplicationWorkflowResponse) Reset() {
	*x = CreateVReplicationWorkflowResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVReplicationWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVReplicationWorkflowResponse) ProtoMessage() {}

func (x *CreateVReplicationWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVReplicationWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreateVReplicationWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{97}
}

func (x *CreateVReplicationWorkflowResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteVReplicationWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      string                 `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVReplicationWorkflowRequest) Reset() {
	*x = DeleteVReplicationWorkflowRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVReplicationWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVReplicationWorkflowRequest) ProtoMessage() {}

func (x *DeleteVReplicationWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVReplicationWorkflowRequest.ProtoReflect.Descriptor instead.
func (*DeleteVReplicationWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{98}
}

func (x *DeleteVReplicationWorkflowRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

type DeleteVReplicationWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVReplicationWorkflowResponse) Reset() {
	*x = DeleteVReplicationWorkflowResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVReplicationWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVReplicationWorkflowResponse) ProtoMessage() {}

func (x *DeleteVReplicationWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVReplicationWorkflowResponse.ProtoReflect.Descriptor instead.
func (*DeleteVReplicationWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{99}
}

func (x *DeleteVReplicationWorkflowResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReadVReplicationWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      string                 `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadVReplicationWorkflowRequest) Reset() {
	*x = ReadVReplicationWorkflowRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadVReplicationWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVReplicationWorkflowRequest) ProtoMessage() {}

func (x *ReadVReplicationWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVReplicationWorkflowRequest.ProtoReflect.Descriptor instead.
func (*ReadVReplicationWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{100}
}

func (x *ReadVReplicationWorkflowRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

type ReadVReplicationWorkflowResponse struct {
	state                     protoimpl.MessageState                     `protogen:"open.v1"`
	Workflow                  string                                     `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Cells                     string                                     `protobuf:"bytes,3,opt,name=cells,proto3" json:"cells,omitempty"`
	TabletTypes               []v191.TabletType                          `protobuf:"varint,4,rep,packed,name=tablet_types,json=tabletTypes,proto3,enum=vitess.topodata.v19.TabletType" json:"tablet_types,omitempty"`
	TabletSelectionPreference TabletSelectionPreference                  `protobuf:"varint,5,opt,name=tablet_selection_preference,json=tabletSelectionPreference,proto3,enum=vitess.tabletmanagerdata.v19.TabletSelectionPreference" json:"tablet_selection_preference,omitempty"`
	DbName                    string                                     `protobuf:"bytes,6,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	Tags                      string                                     `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	WorkflowType              v196.VReplicationWorkflowType              `protobuf:"varint,8,opt,name=workflow_type,json=workflowType,proto3,enum=vitess.binlogdata.v19.VReplicationWorkflowType" json:"workflow_type,omitempty"`
	WorkflowSubType           v196.VReplicationWorkflowSubType           `protobuf:"varint,9,opt,name=workflow_sub_type,json=workflowSubType,proto3,enum=vitess.binlogdata.v19.VReplicationWorkflowSubType" json:"workflow_sub_type,omitempty"`
	DeferSecondaryKeys        bool                                       `protobuf:"varint,10,opt,name=defer_secondary_keys,json=deferSecondaryKeys,proto3" json:"defer_secondary_keys,omitempty"`
	Streams                   []*ReadVReplicationWorkflowResponse_Stream `protobuf:"bytes,11,rep,name=streams,proto3" json:"streams,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ReadVReplicationWorkflowResponse) Reset() {
	*x = ReadVReplicationWorkflowResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadVReplicationWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVReplicationWorkflowResponse) ProtoMessage() {}

func (x *ReadVReplicationWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVReplicationWorkflowResponse.ProtoReflect.Descriptor instead.
func (*ReadVReplicationWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{101}
}

func (x *ReadVReplicationWorkflowResponse) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *ReadVReplicationWorkflowResponse) GetCells() string {
	if x != nil {
		return x.Cells
	}
	return ""
}

func (x *ReadVReplicationWorkflowResponse) GetTabletTypes() []v191.TabletType {
	if x != nil {
		return x.TabletTypes
	}
	return nil
}

func (x *ReadVReplicationWorkflowResponse) GetTabletSelectionPreference() TabletSelectionPreference {
	if x != nil {
		return x.TabletSelectionPreference
	}
	return TabletSelectionPreference_ANY
}

func (x *ReadVReplicationWorkflowResponse) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *ReadVReplicationWorkflowResponse) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *ReadVReplicationWorkflowResponse) GetWorkflowType() v196.VReplicationWorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return v196.VReplicationWorkflowType(0)
}

func (x *ReadVReplicationWorkflowResponse) GetWorkflowSubType() v196.VReplicationWorkflowSubType {
	if x != nil {
		return x.WorkflowSubType
	}
	return v196.VReplicationWorkflowSubType(0)
}

func (x *ReadVReplicationWorkflowResponse) GetDeferSecondaryKeys() bool {
	if x != nil {
		return x.DeferSecondaryKeys
	}
	return false
}

func (x *ReadVReplicationWorkflowResponse) GetStreams() []*ReadVReplicationWorkflowResponse_Stream {
	if x != nil {
		return x.Streams
	}
	return nil
}

type VDiffRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyspace      string                 `protobuf:"bytes,1,opt,name=keyspace,proto3" json:"keyspace,omitempty"`
	Workflow      string                 `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	ActionArg     string                 `protobuf:"bytes,4,opt,name=action_arg,json=actionArg,proto3" json:"action_arg,omitempty"`
	VdiffUuid     string                 `protobuf:"bytes,5,opt,name=vdiff_uuid,json=vdiffUuid,proto3" json:"vdiff_uuid,omitempty"`
	Options       *VDiffOptions          `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VDiffRequest) Reset() {
	*x = VDiffRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDiffRequest) ProtoMessage() {}

func (x *VDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDiffRequest.ProtoReflect.Descriptor instead.
func (*VDiffRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{102}
}

func (x *VDiffRequest) GetKeyspace() string {
	if x != nil {
		return x.Keyspace
	}
	return ""
}

func (x *VDiffRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *VDiffRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *VDiffRequest) GetActionArg() string {
	if x != nil {
		return x.ActionArg
	}
	return ""
}

func (x *VDiffRequest) GetVdiffUuid() string {
	if x != nil {
		return x.VdiffUuid
	}
	return ""
}

func (x *VDiffRequest) GetOptions() *VDiffOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type VDiffResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Output        *v19.QueryResult       `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	VdiffUuid     string                 `protobuf:"bytes,3,opt,name=vdiff_uuid,json=vdiffUuid,proto3" json:"vdiff_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VDiffResponse) Reset() {
	*x = VDiffResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDiffResponse) ProtoMessage() {}

func (x *VDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDiffResponse.ProtoReflect.Descriptor instead.
func (*VDiffResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{103}
}

func (x *VDiffResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VDiffResponse) GetOutput() *v19.QueryResult {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *VDiffResponse) GetVdiffUuid() string {
	if x != nil {
		return x.VdiffUuid
	}
	return ""
}

// options that influence the tablet selected by the picker for streaming data from
type VDiffPickerOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TabletTypes   string                 `protobuf:"bytes,1,opt,name=tablet_types,json=tabletTypes,proto3" json:"tablet_types,omitempty"`
	SourceCell    string                 `protobuf:"bytes,2,opt,name=source_cell,json=sourceCell,proto3" json:"source_cell,omitempty"`
	TargetCell    string                 `protobuf:"bytes,3,opt,name=target_cell,json=targetCell,proto3" json:"target_cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VDiffPickerOptions) Reset() {
	*x = VDiffPickerOptions{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VDiffPickerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDiffPickerOptions) ProtoMessage() {}

func (x *VDiffPickerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDiffPickerOptions.ProtoReflect.Descriptor instead.
func (*VDiffPickerOptions) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{104}
}

func (x *VDiffPickerOptions) GetTabletTypes() string {
	if x != nil {
		return x.TabletTypes
	}
	return ""
}

func (x *VDiffPickerOptions) GetSourceCell() string {
	if x != nil {
		return x.SourceCell
	}
	return ""
}

func (x *VDiffPickerOptions) GetTargetCell() string {
	if x != nil {
		return x.TargetCell
	}
	return ""
}

// options that only influence how vdiff differences are reported
type VDiffReportOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnlyPks       bool                   `protobuf:"varint,1,opt,name=only_pks,json=onlyPks,proto3" json:"only_pks,omitempty"`
	DebugQuery    bool                   `protobuf:"varint,2,opt,name=debug_query,json=debugQuery,proto3" json:"debug_query,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	MaxSampleRows int64                  `protobuf:"varint,4,opt,name=max_sample_rows,json=maxSampleRows,proto3" json:"max_sample_rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VDiffReportOptions) Reset() {
	*x = VDiffReportOptions{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VDiffReportOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDiffReportOptions) ProtoMessage() {}

func (x *VDiffReportOptions) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDiffReportOptions.ProtoReflect.Descriptor instead.
func (*VDiffReportOptions) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{105}
}

func (x *VDiffReportOptions) GetOnlyPks() bool {
	if x != nil {
		return x.OnlyPks
	}
	return false
}

func (x *VDiffReportOptions) GetDebugQuery() bool {
	if x != nil {
		return x.DebugQuery
	}
	return false
}

func (x *VDiffReportOptions) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VDiffReportOptions) GetMaxSampleRows() int64 {
	if x != nil {
		return x.MaxSampleRows
	}
	return 0
}

type VDiffCoreOptions struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Tables                string                 `protobuf:"bytes,1,opt,name=tables,proto3" json:"tables,omitempty"`
	AutoRetry             bool                   `protobuf:"varint,2,opt,name=auto_retry,json=autoRetry,proto3" json:"auto_retry,omitempty"`
	MaxRows               int64                  `protobuf:"varint,3,opt,name=max_rows,json=maxRows,proto3" json:"max_rows,omitempty"`
	Checksum              bool                   `protobuf:"varint,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	SamplePct             int64                  `protobuf:"varint,5,opt,name=sample_pct,json=samplePct,proto3" json:"sample_pct,omitempty"`
	TimeoutSeconds        int64                  `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	MaxExtraRowsToCompare int64                  `protobuf:"varint,7,opt,name=max_extra_rows_to_compare,json=maxExtraRowsToCompare,proto3" json:"max_extra_rows_to_compare,omitempty"`
	UpdateTableStats      bool                   `protobuf:"varint,8,opt,name=update_table_stats,json=updateTableStats,proto3" json:"update_table_stats,omitempty"`
	MaxDiffSeconds        int64                  `protobuf:"varint,9,opt,name=max_diff_seconds,json=maxDiffSeconds,proto3" json:"max_diff_seconds,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *VDiffCoreOptions) Reset() {
	*x = VDiffCoreOptions{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VDiffCoreOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDiffCoreOptions) ProtoMessage() {}

func (x *VDiffCoreOptions) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDiffCoreOptions.ProtoReflect.Descriptor instead.
func (*VDiffCoreOptions) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{106}
}

func (x *VDiffCoreOptions) GetTables() string {
	if x != nil {
		return x.Tables
	}
	return ""
}

func (x *VDiffCoreOptions) GetAutoRetry() bool {
	if x != nil {
		return x.AutoRetry
	}
	return false
}

func (x *VDiffCoreOptions) GetMaxRows() int64 {
	if x != nil {
		return x.MaxRows
	}
	return 0
}

func (x *VDiffCoreOptions) GetChecksum() bool {
	if x != nil {
		return x.Checksum
	}
	return false
}

func (x *VDiffCoreOptions) GetSamplePct() int64 {
	if x != nil {
		return x.SamplePct
	}
	return 0
}

func (x *VDiffCoreOptions) GetTimeoutSeconds() int64 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *VDiffCoreOptions) GetMaxExtraRowsToCompare() int64 {
	if x != nil {
		return x.MaxExtraRowsToCompare
	}
	return 0
}

func (x *VDiffCoreOptions) GetUpdateTableStats() bool {
	if x != nil {
		return x.UpdateTableStats
	}
	return false
}

func (x *VDiffCoreOptions) GetMaxDiffSeconds() int64 {
	if x != nil {
		return x.MaxDiffSeconds
	}
	return 0
}

type VDiffOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PickerOptions *VDiffPickerOptions    `protobuf:"bytes,1,opt,name=picker_options,json=pickerOptions,proto3" json:"picker_options,omitempty"`
	CoreOptions   *VDiffCoreOptions      `protobuf:"bytes,2,opt,name=core_options,json=coreOptions,proto3" json:"core_options,omitempty"`
	ReportOptions *VDiffReportOptions    `protobuf:"bytes,3,opt,name=report_options,json=reportOptions,proto3" json:"report_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VDiffOptions) Reset() {
	*x = VDiffOptions{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VDiffOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDiffOptions) ProtoMessage() {}

func (x *VDiffOptions) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDiffOptions.ProtoReflect.Descriptor instead.
func (*VDiffOptions) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{107}
}

func (x *VDiffOptions) GetPickerOptions() *VDiffPickerOptions {
	if x != nil {
		return x.PickerOptions
	}
	return nil
}

func (x *VDiffOptions) GetCoreOptions() *VDiffCoreOptions {
	if x != nil {
		return x.CoreOptions
	}
	return nil
}

func (x *VDiffOptions) GetReportOptions() *VDiffReportOptions {
	if x != nil {
		return x.ReportOptions
	}
	return nil
}

// UpdateVReplicationWorkflowRequest is used to update an existing VReplication
// workflow. Note that the following fields MUST have an explicit value provided
// if you do NOT wish to update the existing value to the given type's ZeroValue:
// cells, tablet_types, on_ddl, and state.
// TODO: leverage the optional modifier for these fields rather than using SimulatedNull
// values: https://github.com/vitessio/vitess/issues/15627
type UpdateVReplicationWorkflowRequest struct {
	state                     protoimpl.MessageState         `protogen:"open.v1"`
	Workflow                  string                         `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Cells                     []string                       `protobuf:"bytes,2,rep,name=cells,proto3" json:"cells,omitempty"`
	TabletTypes               []v191.TabletType              `protobuf:"varint,3,rep,packed,name=tablet_types,json=tabletTypes,proto3,enum=vitess.topodata.v19.TabletType" json:"tablet_types,omitempty"`
	TabletSelectionPreference TabletSelectionPreference      `protobuf:"varint,4,opt,name=tablet_selection_preference,json=tabletSelectionPreference,proto3,enum=vitess.tabletmanagerdata.v19.TabletSelectionPreference" json:"tablet_selection_preference,omitempty"`
	OnDdl                     v196.OnDDLAction               `protobuf:"varint,5,opt,name=on_ddl,json=onDdl,proto3,enum=vitess.binlogdata.v19.OnDDLAction" json:"on_ddl,omitempty"`
	State                     v196.VReplicationWorkflowState `protobuf:"varint,6,opt,name=state,proto3,enum=vitess.binlogdata.v19.VReplicationWorkflowState" json:"state,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UpdateVReplicationWorkflowRequest) Reset() {
	*x = UpdateVReplicationWorkflowRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVReplicationWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVReplicationWorkflowRequest) ProtoMessage() {}

func (x *UpdateVReplicationWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVReplicationWorkflowRequest.ProtoReflect.Descriptor instead.
func (*UpdateVReplicationWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{108}
}

func (x *UpdateVReplicationWorkflowRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *UpdateVReplicationWorkflowRequest) GetCells() []string {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *UpdateVReplicationWorkflowRequest) GetTabletTypes() []v191.TabletType {
	if x != nil {
		return x.TabletTypes
	}
	return nil
}

func (x *UpdateVReplicationWorkflowRequest) GetTabletSelectionPreference() TabletSelectionPreference {
	if x != nil {
		return x.TabletSelectionPreference
	}
	return TabletSelectionPreference_ANY
}

func (x *UpdateVReplicationWorkflowRequest) GetOnDdl() v196.OnDDLAction {
	if x != nil {
		return x.OnDdl
	}
	return v196.OnDDLAction(0)
}

func (x *UpdateVReplicationWorkflowRequest) GetState() v196.VReplicationWorkflowState {
	if x != nil {
		return x.State
	}
	return v196.VReplicationWorkflowState(0)
}

type UpdateVReplicationWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v19.QueryResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVReplicationWorkflowResponse) Reset() {
	*x = UpdateVReplicationWorkflowResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVReplicationWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVReplicationWorkflowResponse) ProtoMessage() {}

func (x *UpdateVReplicationWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVReplicationWorkflowResponse.ProtoReflect.Descriptor instead.
func (*UpdateVReplicationWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{109}
}

func (x *UpdateVReplicationWorkflowResponse) GetResult() *v19.QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResetSequencesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tables        []string               `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetSequencesRequest) Reset() {
	*x = ResetSequencesRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetSequencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetSequencesRequest) ProtoMessage() {}

func (x *ResetSequencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetSequencesRequest.ProtoReflect.Descriptor instead.
func (*ResetSequencesRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{110}
}

func (x *ResetSequencesRequest) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

type ResetSequencesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetSequencesResponse) Reset() {
	*x = ResetSequencesResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetSequencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetSequencesResponse) ProtoMessage() {}

func (x *ResetSequencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetSequencesResponse.ProtoReflect.Descriptor instead.
func (*ResetSequencesResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{111}
}

type CheckThrottlerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppName       string                 `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckThrottlerRequest) Reset() {
	*x = CheckThrottlerRequest{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckThrottlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckThrottlerRequest) ProtoMessage() {}

func (x *CheckThrottlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckThrottlerRequest.ProtoReflect.Descriptor instead.
func (*CheckThrottlerRequest) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{112}
}

func (x *CheckThrottlerRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type CheckThrottlerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// StatusCode is HTTP compliant response code (e.g. 200 for OK)
	StatusCode int32 `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// Value is the metric value collected by the tablet
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	// Threshold is the throttling threshold the table was comparing the value with
	Threshold float64 `protobuf:"fixed64,3,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// Error indicates an error retrieving the value
	Error string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	// Message
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// RecentlyChecked indicates that the tablet has been hit with a user-facing check, which can then imply
	// that heartbeats lease should be renwed.
	RecentlyChecked bool `protobuf:"varint,6,opt,name=recently_checked,json=recentlyChecked,proto3" json:"recently_checked,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CheckThrottlerResponse) Reset() {
	*x = CheckThrottlerResponse{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckThrottlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckThrottlerResponse) ProtoMessage() {}

func (x *CheckThrottlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckThrottlerResponse.ProtoReflect.Descriptor instead.
func (*CheckThrottlerResponse) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{113}
}

func (x *CheckThrottlerResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CheckThrottlerResponse) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *CheckThrottlerResponse) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *CheckThrottlerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CheckThrottlerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckThrottlerResponse) GetRecentlyChecked() bool {
	if x != nil {
		return x.RecentlyChecked
	}
	return false
}

type ReadVReplicationWorkflowResponse_Stream struct {
	state                protoimpl.MessageState         `protogen:"open.v1"`
	Id                   int32                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Bls                  *v196.BinlogSource             `protobuf:"bytes,2,opt,name=bls,proto3" json:"bls,omitempty"`
	Pos                  string                         `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
	StopPos              string                         `protobuf:"bytes,4,opt,name=stop_pos,json=stopPos,proto3" json:"stop_pos,omitempty"`
	MaxTps               int64                          `protobuf:"varint,5,opt,name=max_tps,json=maxTps,proto3" json:"max_tps,omitempty"`
	MaxReplicationLag    int64                          `protobuf:"varint,6,opt,name=max_replication_lag,json=maxReplicationLag,proto3" json:"max_replication_lag,omitempty"`
	TimeUpdated          *v195.Time                     `protobuf:"bytes,7,opt,name=time_updated,json=timeUpdated,proto3" json:"time_updated,omitempty"`
	TransactionTimestamp *v195.Time                     `protobuf:"bytes,8,opt,name=transaction_timestamp,json=transactionTimestamp,proto3" json:"transaction_timestamp,omitempty"`
	State                v196.VReplicationWorkflowState `protobuf:"varint,9,opt,name=state,proto3,enum=vitess.binlogdata.v19.VReplicationWorkflowState" json:"state,omitempty"`
	Message              string                         `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	RowsCopied           int64                          `protobuf:"varint,11,opt,name=rows_copied,json=rowsCopied,proto3" json:"rows_copied,omitempty"`
	TimeHeartbeat        *v195.Time                     `protobuf:"bytes,12,opt,name=time_heartbeat,json=timeHeartbeat,proto3" json:"time_heartbeat,omitempty"`
	TimeThrottled        *v195.Time                     `protobuf:"bytes,13,opt,name=time_throttled,json=timeThrottled,proto3" json:"time_throttled,omitempty"`
	ComponentThrottled   string                         `protobuf:"bytes,14,opt,name=component_throttled,json=componentThrottled,proto3" json:"component_throttled,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadVReplicationWorkflowResponse_Stream) Reset() {
	*x = ReadVReplicationWorkflowResponse_Stream{}
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadVReplicationWorkflowResponse_Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVReplicationWorkflowResponse_Stream) ProtoMessage() {}

func (x *ReadVReplicationWorkflowResponse_Stream) ProtoReflect() protoreflect.Message {
	mi := &file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVReplicationWorkflowResponse_Stream.ProtoReflect.Descriptor instead.
func (*ReadVReplicationWorkflowResponse_Stream) Descriptor() ([]byte, []int) {
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP(), []int{101, 0}
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetBls() *v196.BinlogSource {
	if x != nil {
		return x.Bls
	}
	return nil
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetStopPos() string {
	if x != nil {
		return x.StopPos
	}
	return ""
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetMaxTps() int64 {
	if x != nil {
		return x.MaxTps
	}
	return 0
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetMaxReplicationLag() int64 {
	if x != nil {
		return x.MaxReplicationLag
	}
	return 0
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetTimeUpdated() *v195.Time {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetTransactionTimestamp() *v195.Time {
	if x != nil {
		return x.TransactionTimestamp
	}
	return nil
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetState() v196.VReplicationWorkflowState {
	if x != nil {
		return x.State
	}
	return v196.VReplicationWorkflowState(0)
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetRowsCopied() int64 {
	if x != nil {
		return x.RowsCopied
	}
	return 0
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetTimeHeartbeat() *v195.Time {
	if x != nil {
		return x.TimeHeartbeat
	}
	return nil
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetTimeThrottled() *v195.Time {
	if x != nil {
		return x.TimeThrottled
	}
	return nil
}

func (x *ReadVReplicationWorkflowResponse_Stream) GetComponentThrottled() string {
	if x != nil {
		return x.ComponentThrottled
	}
	return ""
}

var File_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto protoreflect.FileDescriptor

const file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDesc = "" +
	"\n" +
	"4vitess/tabletmanagerdata/v19/tabletmanagerdata.proto\x12\x1cvitess.tabletmanagerdata.v19\x1a&vitess/binlogdata/v19/binlogdata.proto\x1a\x1cvitess/query/v19/query.proto\x1a\"vitess/topodata/v19/topodata.proto\x1a0vitess/replicationdata/v19/replicationdata.proto\x1a vitess/logutil/v19/logutil.proto\x1a\x1evitess/vttime/v19/vttime.proto\x1a\x1cvitess/vtrpc/v19/vtrpc.proto\"\x8a\x02\n" +
	"\x0fTableDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06schema\x18\x02 \x01(\tR\x06schema\x12\x18\n" +
	"\acolumns\x18\x03 \x03(\tR\acolumns\x12.\n" +
	"\x13primary_key_columns\x18\x04 \x03(\tR\x11primaryKeyColumns\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x1f\n" +
	"\vdata_length\x18\x06 \x01(\x04R\n" +
	"dataLength\x12\x1b\n" +
	"\trow_count\x18\a \x01(\x04R\browCount\x12/\n" +
	"\x06fields\x18\b \x03(\v2\x17.vitess.query.v19.FieldR\x06fields\"\x9d\x01\n" +
	"\x10SchemaDefinition\x12'\n" +
	"\x0fdatabase_schema\x18\x01 \x01(\tR\x0edatabaseSchema\x12Z\n" +
	"\x11table_definitions\x18\x02 \x03(\v2-.vitess.tabletmanagerdata.v19.TableDefinitionR\x10tableDefinitionsJ\x04\b\x03\x10\x04\"\xbc\x01\n" +
	"\x12SchemaChangeResult\x12S\n" +
	"\rbefore_schema\x18\x01 \x01(\v2..vitess.tabletmanagerdata.v19.SchemaDefinitionR\fbeforeSchema\x12Q\n" +
	"\fafter_schema\x18\x02 \x01(\v2..vitess.tabletmanagerdata.v19.SchemaDefinitionR\vafterSchema\"\x82\x02\n" +
	"\x0eUserPermission\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04user\x18\x02 \x01(\tR\x04user\x12+\n" +
	"\x11password_checksum\x18\x03 \x01(\x04R\x10passwordChecksum\x12\\\n" +
	"\n" +
	"privileges\x18\x04 \x03(\v2<.vitess.tabletmanagerdata.v19.UserPermission.PrivilegesEntryR\n" +
	"privileges\x1a=\n" +
	"\x0fPrivilegesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe1\x01\n" +
	"\fDbPermission\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x0e\n" +
	"\x02db\x18\x02 \x01(\tR\x02db\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12Z\n" +
	"\n" +
	"privileges\x18\x04 \x03(\v2:.vitess.tabletmanagerdata.v19.DbPermission.PrivilegesEntryR\n" +
	"privileges\x1a=\n" +
	"\x0fPrivilegesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb9\x01\n" +
	"\vPermissions\x12W\n" +
	"\x10user_permissions\x18\x01 \x03(\v2,.vitess.tabletmanagerdata.v19.UserPermissionR\x0fuserPermissions\x12Q\n" +
	"\x0edb_permissions\x18\x02 \x03(\v2*.vitess.tabletmanagerdata.v19.DbPermissionR\rdbPermissions\"'\n" +
	"\vPingRequest\x12\x18\n" +
	"\apayload\x18\x01 \x01(\tR\apayload\"(\n" +
	"\fPingResponse\x12\x18\n" +
	"\apayload\x18\x01 \x01(\tR\apayload\"*\n" +
	"\fSleepRequest\x12\x1a\n" +
	"\bduration\x18\x01 \x01(\x03R\bduration\"\x0f\n" +
	"\rSleepResponse\"\xe2\x01\n" +
	"\x12ExecuteHookRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"parameters\x18\x02 \x03(\tR\n" +
	"parameters\x12[\n" +
	"\textra_env\x18\x03 \x03(\v2>.vitess.tabletmanagerdata.v19.ExecuteHookRequest.ExtraEnvEntryR\bextraEnv\x1a;\n" +
	"\rExtraEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"f\n" +
	"\x13ExecuteHookResponse\x12\x1f\n" +
	"\vexit_status\x18\x01 \x01(\x03R\n" +
	"exitStatus\x12\x16\n" +
	"\x06stdout\x18\x02 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x03 \x01(\tR\x06stderr\"\xa2\x01\n" +
	"\x10GetSchemaRequest\x12\x16\n" +
	"\x06tables\x18\x01 \x03(\tR\x06tables\x12#\n" +
	"\rinclude_views\x18\x02 \x01(\bR\fincludeViews\x12%\n" +
	"\x0eexclude_tables\x18\x03 \x03(\tR\rexcludeTables\x12*\n" +
	"\x11table_schema_only\x18\x04 \x01(\bR\x0ftableSchemaOnly\"p\n" +
	"\x11GetSchemaResponse\x12[\n" +
	"\x11schema_definition\x18\x01 \x01(\v2..vitess.tabletmanagerdata.v19.SchemaDefinitionR\x10schemaDefinition\"\x17\n" +
	"\x15GetPermissionsRequest\"e\n" +
	"\x16GetPermissionsResponse\x12K\n" +
	"\vpermissions\x18\x01 \x01(\v2).vitess.tabletmanagerdata.v19.PermissionsR\vpermissions\"\x14\n" +
	"\x12SetReadOnlyRequest\"\x15\n" +
	"\x13SetReadOnlyResponse\"\x15\n" +
	"\x13SetReadWriteRequest\"\x16\n" +
	"\x14SetReadWriteResponse\"q\n" +
	"\x11ChangeTypeRequest\x12@\n" +
	"\vtablet_type\x18\x01 \x01(\x0e2\x1f.vitess.topodata.v19.TabletTypeR\n" +
	"tabletType\x12\x1a\n" +
	"\bsemiSync\x18\x02 \x01(\bR\bsemiSync\"\x14\n" +
	"\x12ChangeTypeResponse\"\x15\n" +
	"\x13RefreshStateRequest\"\x16\n" +
	"\x14RefreshStateResponse\"\x17\n" +
	"\x15RunHealthCheckRequest\"\x18\n" +
	"\x16RunHealthCheckResponse\":\n" +
	"\x13ReloadSchemaRequest\x12#\n" +
	"\rwait_position\x18\x01 \x01(\tR\fwaitPosition\"\x16\n" +
	"\x14ReloadSchemaResponse\"2\n" +
	"\x16PreflightSchemaRequest\x12\x18\n" +
	"\achanges\x18\x01 \x03(\tR\achanges\"r\n" +
	"\x17PreflightSchemaResponse\x12W\n" +
	"\x0echange_results\x18\x01 \x03(\v20.vitess.tabletmanagerdata.v19.SchemaChangeResultR\rchangeResults\"\xcb\x02\n" +
	"\x12ApplySchemaRequest\x12\x10\n" +
	"\x03sql\x18\x01 \x01(\tR\x03sql\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12+\n" +
	"\x11allow_replication\x18\x03 \x01(\bR\x10allowReplication\x12S\n" +
	"\rbefore_schema\x18\x04 \x01(\v2..vitess.tabletmanagerdata.v19.SchemaDefinitionR\fbeforeSchema\x12Q\n" +
	"\fafter_schema\x18\x05 \x01(\v2..vitess.tabletmanagerdata.v19.SchemaDefinitionR\vafterSchema\x12\x19\n" +
	"\bsql_mode\x18\x06 \x01(\tR\asqlMode\x12\x1d\n" +
	"\n" +
	"batch_size\x18\a \x01(\x03R\tbatchSize\"\xbd\x01\n" +
	"\x13ApplySchemaResponse\x12S\n" +
	"\rbefore_schema\x18\x01 \x01(\v2..vitess.tabletmanagerdata.v19.SchemaDefinitionR\fbeforeSchema\x12Q\n" +
	"\fafter_schema\x18\x02 \x01(\v2..vitess.tabletmanagerdata.v19.SchemaDefinitionR\vafterSchema\"\x13\n" +
	"\x11LockTablesRequest\"\x14\n" +
	"\x12LockTablesResponse\"\x15\n" +
	"\x13UnlockTablesRequest\"\x16\n" +
	"\x14UnlockTablesResponse\"\x98\x01\n" +
	"\x13ExecuteQueryRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\fR\x05query\x12\x17\n" +
	"\adb_name\x18\x02 \x01(\tR\x06dbName\x12\x19\n" +
	"\bmax_rows\x18\x03 \x01(\x04R\amaxRows\x127\n" +
	"\tcaller_id\x18\x04 \x01(\v2\x1a.vitess.vtrpc.v19.CallerIDR\bcallerId\"M\n" +
	"\x14ExecuteQueryResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"\xef\x01\n" +
	"\x18ExecuteFetchAsDbaRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\fR\x05query\x12\x17\n" +
	"\adb_name\x18\x02 \x01(\tR\x06dbName\x12\x19\n" +
	"\bmax_rows\x18\x03 \x01(\x04R\amaxRows\x12'\n" +
	"\x0fdisable_binlogs\x18\x04 \x01(\bR\x0edisableBinlogs\x12#\n" +
	"\rreload_schema\x18\x05 \x01(\bR\freloadSchema\x12;\n" +
	"\x1adisable_foreign_key_checks\x18\x06 \x01(\bR\x17disableForeignKeyChecks\"R\n" +
	"\x19ExecuteFetchAsDbaResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"\x8e\x01\n" +
	"\x1dExecuteFetchAsAllPrivsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\fR\x05query\x12\x17\n" +
	"\adb_name\x18\x02 \x01(\tR\x06dbName\x12\x19\n" +
	"\bmax_rows\x18\x03 \x01(\x04R\amaxRows\x12#\n" +
	"\rreload_schema\x18\x04 \x01(\bR\freloadSchema\"W\n" +
	"\x1eExecuteFetchAsAllPrivsResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"K\n" +
	"\x18ExecuteFetchAsAppRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\fR\x05query\x12\x19\n" +
	"\bmax_rows\x18\x02 \x01(\x04R\amaxRows\"R\n" +
	"\x19ExecuteFetchAsAppResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"\x1a\n" +
	"\x18ReplicationStatusRequest\"W\n" +
	"\x19ReplicationStatusResponse\x12:\n" +
	"\x06status\x18\x01 \x01(\v2\".vitess.replicationdata.v19.StatusR\x06status\"\x16\n" +
	"\x14PrimaryStatusRequest\"Z\n" +
	"\x15PrimaryStatusResponse\x12A\n" +
	"\x06status\x18\x01 \x01(\v2).vitess.replicationdata.v19.PrimaryStatusR\x06status\"\x18\n" +
	"\x16PrimaryPositionRequest\"5\n" +
	"\x17PrimaryPositionResponse\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\"4\n" +
	"\x16WaitForPositionRequest\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\"\x19\n" +
	"\x17WaitForPositionResponse\"\x18\n" +
	"\x16StopReplicationRequest\"\x19\n" +
	"\x17StopReplicationResponse\"^\n" +
	"\x1dStopReplicationMinimumRequest\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\x12!\n" +
	"\fwait_timeout\x18\x02 \x01(\x03R\vwaitTimeout\"<\n" +
	"\x1eStopReplicationMinimumResponse\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\"5\n" +
	"\x17StartReplicationRequest\x12\x1a\n" +
	"\bsemiSync\x18\x01 \x01(\bR\bsemiSync\"\x1a\n" +
	"\x18StartReplicationResponse\"b\n" +
	"!StartReplicationUntilAfterRequest\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\x12!\n" +
	"\fwait_timeout\x18\x02 \x01(\x03R\vwaitTimeout\"$\n" +
	"\"StartReplicationUntilAfterResponse\"\x14\n" +
	"\x12GetReplicasRequest\"+\n" +
	"\x13GetReplicasResponse\x12\x14\n" +
	"\x05addrs\x18\x01 \x03(\tR\x05addrs\"\x19\n" +
	"\x17ResetReplicationRequest\"\x1a\n" +
	"\x18ResetReplicationResponse\"/\n" +
	"\x17VReplicationExecRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"Q\n" +
	"\x18VReplicationExecResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"K\n" +
	"\x1dVReplicationWaitForPosRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1a\n" +
	"\bposition\x18\x02 \x01(\tR\bposition\" \n" +
	"\x1eVReplicationWaitForPosResponse\"0\n" +
	"\x12InitPrimaryRequest\x12\x1a\n" +
	"\bsemiSync\x18\x01 \x01(\bR\bsemiSync\"1\n" +
	"\x13InitPrimaryResponse\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\"\xe3\x01\n" +
	"\x1ePopulateReparentJournalRequest\x12&\n" +
	"\x0ftime_created_ns\x18\x01 \x01(\x03R\rtimeCreatedNs\x12\x1f\n" +
	"\vaction_name\x18\x02 \x01(\tR\n" +
	"actionName\x12E\n" +
	"\rprimary_alias\x18\x03 \x01(\v2 .vitess.topodata.v19.TabletAliasR\fprimaryAlias\x121\n" +
	"\x14replication_position\x18\x04 \x01(\tR\x13replicationPosition\"!\n" +
	"\x1fPopulateReparentJournalResponse\"\xc5\x01\n" +
	"\x12InitReplicaRequest\x128\n" +
	"\x06parent\x18\x01 \x01(\v2 .vitess.topodata.v19.TabletAliasR\x06parent\x121\n" +
	"\x14replication_position\x18\x02 \x01(\tR\x13replicationPosition\x12&\n" +
	"\x0ftime_created_ns\x18\x03 \x01(\x03R\rtimeCreatedNs\x12\x1a\n" +
	"\bsemiSync\x18\x04 \x01(\bR\bsemiSync\"\x15\n" +
	"\x13InitReplicaResponse\"\x16\n" +
	"\x14DemotePrimaryRequest\"o\n" +
	"\x15DemotePrimaryResponse\x12P\n" +
	"\x0eprimary_status\x18\x02 \x01(\v2).vitess.replicationdata.v19.PrimaryStatusR\rprimaryStatusJ\x04\b\x01\x10\x02\"6\n" +
	"\x18UndoDemotePrimaryRequest\x12\x1a\n" +
	"\bsemiSync\x18\x01 \x01(\bR\bsemiSync\"\x1b\n" +
	"\x19UndoDemotePrimaryResponse\"\x1b\n" +
	"\x19ReplicaWasPromotedRequest\"\x1c\n" +
	"\x1aReplicaWasPromotedResponse\"#\n" +
	"!ResetReplicationParametersRequest\"$\n" +
	"\"ResetReplicationParametersResponse\"\x13\n" +
	"\x11FullStatusRequest\"T\n" +
	"\x12FullStatusResponse\x12>\n" +
	"\x06status\x18\x01 \x01(\v2&.vitess.replicationdata.v19.FullStatusR\x06status\"\xf8\x01\n" +
	"\x1bSetReplicationSourceRequest\x128\n" +
	"\x06parent\x18\x01 \x01(\v2 .vitess.topodata.v19.TabletAliasR\x06parent\x12&\n" +
	"\x0ftime_created_ns\x18\x02 \x01(\x03R\rtimeCreatedNs\x126\n" +
	"\x17force_start_replication\x18\x03 \x01(\bR\x15forceStartReplication\x12#\n" +
	"\rwait_position\x18\x04 \x01(\tR\fwaitPosition\x12\x1a\n" +
	"\bsemiSync\x18\x05 \x01(\bR\bsemiSync\"\x1e\n" +
	"\x1cSetReplicationSourceResponse\"V\n" +
	"\x1aReplicaWasRestartedRequest\x128\n" +
	"\x06parent\x18\x01 \x01(\v2 .vitess.topodata.v19.TabletAliasR\x06parent\"\x1d\n" +
	"\x1bReplicaWasRestartedResponse\"\x89\x01\n" +
	"\"StopReplicationAndGetStatusRequest\x12c\n" +
	"\x15stop_replication_mode\x18\x01 \x01(\x0e2/.vitess.replicationdata.v19.StopReplicationModeR\x13stopReplicationMode\"v\n" +
	"#StopReplicationAndGetStatusResponse\x12I\n" +
	"\x06status\x18\x02 \x01(\v21.vitess.replicationdata.v19.StopReplicationStatusR\x06statusJ\x04\b\x01\x10\x02\"3\n" +
	"\x15PromoteReplicaRequest\x12\x1a\n" +
	"\bsemiSync\x18\x01 \x01(\bR\bsemiSync\"4\n" +
	"\x16PromoteReplicaResponse\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\"\xab\x01\n" +
	"\rBackupRequest\x12 \n" +
	"\vconcurrency\x18\x01 \x01(\x05R\vconcurrency\x12#\n" +
	"\rallow_primary\x18\x02 \x01(\bR\fallowPrimary\x120\n" +
	"\x14incremental_from_pos\x18\x03 \x01(\tR\x12incrementalFromPos\x12!\n" +
	"\fupgrade_safe\x18\x04 \x01(\bR\vupgradeSafe\"A\n" +
	"\x0eBackupResponse\x12/\n" +
	"\x05event\x18\x01 \x01(\v2\x19.vitess.logutil.v19.EventR\x05event\"\xde\x01\n" +
	"\x18RestoreFromBackupRequest\x128\n" +
	"\vbackup_time\x18\x01 \x01(\v2\x17.vitess.vttime.v19.TimeR\n" +
	"backupTime\x12$\n" +
	"\x0erestore_to_pos\x18\x02 \x01(\tR\frestoreToPos\x12\x17\n" +
	"\adry_run\x18\x03 \x01(\bR\x06dryRun\x12I\n" +
	"\x14restore_to_timestamp\x18\x04 \x01(\v2\x17.vitess.vttime.v19.TimeR\x12restoreToTimestamp\"L\n" +
	"\x19RestoreFromBackupResponse\x12/\n" +
	"\x05event\x18\x01 \x01(\v2\x19.vitess.logutil.v19.EventR\x05event\"\x8b\x05\n" +
	"!CreateVReplicationWorkflowRequest\x12\x1a\n" +
	"\bworkflow\x18\x01 \x01(\tR\bworkflow\x12H\n" +
	"\rbinlog_source\x18\x02 \x03(\v2#.vitess.binlogdata.v19.BinlogSourceR\fbinlogSource\x12\x14\n" +
	"\x05cells\x18\x03 \x03(\tR\x05cells\x12B\n" +
	"\ftablet_types\x18\x04 \x03(\x0e2\x1f.vitess.topodata.v19.TabletTypeR\vtabletTypes\x12w\n" +
	"\x1btablet_selection_preference\x18\x05 \x01(\x0e27.vitess.tabletmanagerdata.v19.TabletSelectionPreferenceR\x19tabletSelectionPreference\x12T\n" +
	"\rworkflow_type\x18\x06 \x01(\x0e2/.vitess.binlogdata.v19.VReplicationWorkflowTypeR\fworkflowType\x12^\n" +
	"\x11workflow_sub_type\x18\a \x01(\x0e22.vitess.binlogdata.v19.VReplicationWorkflowSubTypeR\x0fworkflowSubType\x120\n" +
	"\x14defer_secondary_keys\x18\b \x01(\bR\x12deferSecondaryKeys\x12\x1d\n" +
	"\n" +
	"auto_start\x18\t \x01(\bR\tautoStart\x12&\n" +
	"\x0fstop_after_copy\x18\n" +
	" \x01(\bR\rstopAfterCopy\"[\n" +
	"\"CreateVReplicationWorkflowResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"?\n" +
	"!DeleteVReplicationWorkflowRequest\x12\x1a\n" +
	"\bworkflow\x18\x01 \x01(\tR\bworkflow\"[\n" +
	"\"DeleteVReplicationWorkflowResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"=\n" +
	"\x1fReadVReplicationWorkflowRequest\x12\x1a\n" +
	"\bworkflow\x18\x01 \x01(\tR\bworkflow\"\x8d\n" +
	"\n" +
	" ReadVReplicationWorkflowResponse\x12\x1a\n" +
	"\bworkflow\x18\x02 \x01(\tR\bworkflow\x12\x14\n" +
	"\x05cells\x18\x03 \x01(\tR\x05cells\x12B\n" +
	"\ftablet_types\x18\x04 \x03(\x0e2\x1f.vitess.topodata.v19.TabletTypeR\vtabletTypes\x12w\n" +
	"\x1btablet_selection_preference\x18\x05 \x01(\x0e27.vitess.tabletmanagerdata.v19.TabletSelectionPreferenceR\x19tabletSelectionPreference\x12\x17\n" +
	"\adb_name\x18\x06 \x01(\tR\x06dbName\x12\x12\n" +
	"\x04tags\x18\a \x01(\tR\x04tags\x12T\n" +
	"\rworkflow_type\x18\b \x01(\x0e2/.vitess.binlogdata.v19.VReplicationWorkflowTypeR\fworkflowType\x12^\n" +
	"\x11workflow_sub_type\x18\t \x01(\x0e22.vitess.binlogdata.v19.VReplicationWorkflowSubTypeR\x0fworkflowSubType\x120\n" +
	"\x14defer_secondary_keys\x18\n" +
	" \x01(\bR\x12deferSecondaryKeys\x12_\n" +
	"\astreams\x18\v \x03(\v2E.vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.StreamR\astreams\x1a\x83\x05\n" +
	"\x06Stream\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x125\n" +
	"\x03bls\x18\x02 \x01(\v2#.vitess.binlogdata.v19.BinlogSourceR\x03bls\x12\x10\n" +
	"\x03pos\x18\x03 \x01(\tR\x03pos\x12\x19\n" +
	"\bstop_pos\x18\x04 \x01(\tR\astopPos\x12\x17\n" +
	"\amax_tps\x18\x05 \x01(\x03R\x06maxTps\x12.\n" +
	"\x13max_replication_lag\x18\x06 \x01(\x03R\x11maxReplicationLag\x12:\n" +
	"\ftime_updated\x18\a \x01(\v2\x17.vitess.vttime.v19.TimeR\vtimeUpdated\x12L\n" +
	"\x15transaction_timestamp\x18\b \x01(\v2\x17.vitess.vttime.v19.TimeR\x14transactionTimestamp\x12F\n" +
	"\x05state\x18\t \x01(\x0e20.vitess.binlogdata.v19.VReplicationWorkflowStateR\x05state\x12\x18\n" +
	"\amessage\x18\n" +
	" \x01(\tR\amessage\x12\x1f\n" +
	"\vrows_copied\x18\v \x01(\x03R\n" +
	"rowsCopied\x12>\n" +
	"\x0etime_heartbeat\x18\f \x01(\v2\x17.vitess.vttime.v19.TimeR\rtimeHeartbeat\x12>\n" +
	"\x0etime_throttled\x18\r \x01(\v2\x17.vitess.vttime.v19.TimeR\rtimeThrottled\x12/\n" +
	"\x13component_throttled\x18\x0e \x01(\tR\x12componentThrottled\"\xe2\x01\n" +
	"\fVDiffRequest\x12\x1a\n" +
	"\bkeyspace\x18\x01 \x01(\tR\bkeyspace\x12\x1a\n" +
	"\bworkflow\x18\x02 \x01(\tR\bworkflow\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12\x1d\n" +
	"\n" +
	"action_arg\x18\x04 \x01(\tR\tactionArg\x12\x1d\n" +
	"\n" +
	"vdiff_uuid\x18\x05 \x01(\tR\tvdiffUuid\x12D\n" +
	"\aoptions\x18\x06 \x01(\v2*.vitess.tabletmanagerdata.v19.VDiffOptionsR\aoptions\"u\n" +
	"\rVDiffResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x125\n" +
	"\x06output\x18\x02 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06output\x12\x1d\n" +
	"\n" +
	"vdiff_uuid\x18\x03 \x01(\tR\tvdiffUuid\"y\n" +
	"\x12VDiffPickerOptions\x12!\n" +
	"\ftablet_types\x18\x01 \x01(\tR\vtabletTypes\x12\x1f\n" +
	"\vsource_cell\x18\x02 \x01(\tR\n" +
	"sourceCell\x12\x1f\n" +
	"\vtarget_cell\x18\x03 \x01(\tR\n" +
	"targetCell\"\x90\x01\n" +
	"\x12VDiffReportOptions\x12\x19\n" +
	"\bonly_pks\x18\x01 \x01(\bR\aonlyPks\x12\x1f\n" +
	"\vdebug_query\x18\x02 \x01(\bR\n" +
	"debugQuery\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12&\n" +
	"\x0fmax_sample_rows\x18\x04 \x01(\x03R\rmaxSampleRows\"\xda\x02\n" +
	"\x10VDiffCoreOptions\x12\x16\n" +
	"\x06tables\x18\x01 \x01(\tR\x06tables\x12\x1d\n" +
	"\n" +
	"auto_retry\x18\x02 \x01(\bR\tautoRetry\x12\x19\n" +
	"\bmax_rows\x18\x03 \x01(\x03R\amaxRows\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\bR\bchecksum\x12\x1d\n" +
	"\n" +
	"sample_pct\x18\x05 \x01(\x03R\tsamplePct\x12'\n" +
	"\x0ftimeout_seconds\x18\x06 \x01(\x03R\x0etimeoutSeconds\x128\n" +
	"\x19max_extra_rows_to_compare\x18\a \x01(\x03R\x15maxExtraRowsToCompare\x12,\n" +
	"\x12update_table_stats\x18\b \x01(\bR\x10updateTableStats\x12(\n" +
	"\x10max_diff_seconds\x18\t \x01(\x03R\x0emaxDiffSeconds\"\x93\x02\n" +
	"\fVDiffOptions\x12W\n" +
	"\x0epicker_options\x18\x01 \x01(\v20.vitess.tabletmanagerdata.v19.VDiffPickerOptionsR\rpickerOptions\x12Q\n" +
	"\fcore_options\x18\x02 \x01(\v2..vitess.tabletmanagerdata.v19.VDiffCoreOptionsR\vcoreOptions\x12W\n" +
	"\x0ereport_options\x18\x03 \x01(\v20.vitess.tabletmanagerdata.v19.VDiffReportOptionsR\rreportOptions\"\x9b\x03\n" +
	"!UpdateVReplicationWorkflowRequest\x12\x1a\n" +
	"\bworkflow\x18\x01 \x01(\tR\bworkflow\x12\x14\n" +
	"\x05cells\x18\x02 \x03(\tR\x05cells\x12B\n" +
	"\ftablet_types\x18\x03 \x03(\x0e2\x1f.vitess.topodata.v19.TabletTypeR\vtabletTypes\x12w\n" +
	"\x1btablet_selection_preference\x18\x04 \x01(\x0e27.vitess.tabletmanagerdata.v19.TabletSelectionPreferenceR\x19tabletSelectionPreference\x129\n" +
	"\x06on_ddl\x18\x05 \x01(\x0e2\".vitess.binlogdata.v19.OnDDLActionR\x05onDdl\x12F\n" +
	"\x05state\x18\x06 \x01(\x0e20.vitess.binlogdata.v19.VReplicationWorkflowStateR\x05stateJ\x04\b\a\x10\b\"[\n" +
	"\"UpdateVReplicationWorkflowResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.vitess.query.v19.QueryResultR\x06result\"/\n" +
	"\x15ResetSequencesRequest\x12\x16\n" +
	"\x06tables\x18\x01 \x03(\tR\x06tables\"\x18\n" +
	"\x16ResetSequencesResponse\"2\n" +
	"\x15CheckThrottlerRequest\x12\x19\n" +
	"\bapp_name\x18\x01 \x01(\tR\aappName\"\xc8\x01\n" +
	"\x16CheckThrottlerResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12\x1c\n" +
	"\tthreshold\x18\x03 \x01(\x01R\tthreshold\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12)\n" +
	"\x10recently_checked\x18\x06 \x01(\bR\x0frecentlyChecked*>\n" +
	"\x19TabletSelectionPreference\x12\a\n" +
	"\x03ANY\x10\x00\x12\v\n" +
	"\aINORDER\x10\x01\x12\v\n" +
	"\aUNKNOWN\x10\x03B[ZYgithub.com/planetscale/vitess-types/gen/vitess/tabletmanagerdata/v19;tabletmanagerdatav19b\x06proto3"

var (
	file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescOnce sync.Once
	file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescData []byte
)

func file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescGZIP() []byte {
	file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescOnce.Do(func() {
		file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDesc), len(file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDesc)))
	})
	return file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDescData
}

var file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes = make([]protoimpl.MessageInfo, 118)
var file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_goTypes = []any{
	(TabletSelectionPreference)(0),                  // 0: vitess.tabletmanagerdata.v19.TabletSelectionPreference
	(*TableDefinition)(nil),                         // 1: vitess.tabletmanagerdata.v19.TableDefinition
	(*SchemaDefinition)(nil),                        // 2: vitess.tabletmanagerdata.v19.SchemaDefinition
	(*SchemaChangeResult)(nil),                      // 3: vitess.tabletmanagerdata.v19.SchemaChangeResult
	(*UserPermission)(nil),                          // 4: vitess.tabletmanagerdata.v19.UserPermission
	(*DbPermission)(nil),                            // 5: vitess.tabletmanagerdata.v19.DbPermission
	(*Permissions)(nil),                             // 6: vitess.tabletmanagerdata.v19.Permissions
	(*PingRequest)(nil),                             // 7: vitess.tabletmanagerdata.v19.PingRequest
	(*PingResponse)(nil),                            // 8: vitess.tabletmanagerdata.v19.PingResponse
	(*SleepRequest)(nil),                            // 9: vitess.tabletmanagerdata.v19.SleepRequest
	(*SleepResponse)(nil),                           // 10: vitess.tabletmanagerdata.v19.SleepResponse
	(*ExecuteHookRequest)(nil),                      // 11: vitess.tabletmanagerdata.v19.ExecuteHookRequest
	(*ExecuteHookResponse)(nil),                     // 12: vitess.tabletmanagerdata.v19.ExecuteHookResponse
	(*GetSchemaRequest)(nil),                        // 13: vitess.tabletmanagerdata.v19.GetSchemaRequest
	(*GetSchemaResponse)(nil),                       // 14: vitess.tabletmanagerdata.v19.GetSchemaResponse
	(*GetPermissionsRequest)(nil),                   // 15: vitess.tabletmanagerdata.v19.GetPermissionsRequest
	(*GetPermissionsResponse)(nil),                  // 16: vitess.tabletmanagerdata.v19.GetPermissionsResponse
	(*SetReadOnlyRequest)(nil),                      // 17: vitess.tabletmanagerdata.v19.SetReadOnlyRequest
	(*SetReadOnlyResponse)(nil),                     // 18: vitess.tabletmanagerdata.v19.SetReadOnlyResponse
	(*SetReadWriteRequest)(nil),                     // 19: vitess.tabletmanagerdata.v19.SetReadWriteRequest
	(*SetReadWriteResponse)(nil),                    // 20: vitess.tabletmanagerdata.v19.SetReadWriteResponse
	(*ChangeTypeRequest)(nil),                       // 21: vitess.tabletmanagerdata.v19.ChangeTypeRequest
	(*ChangeTypeResponse)(nil),                      // 22: vitess.tabletmanagerdata.v19.ChangeTypeResponse
	(*RefreshStateRequest)(nil),                     // 23: vitess.tabletmanagerdata.v19.RefreshStateRequest
	(*RefreshStateResponse)(nil),                    // 24: vitess.tabletmanagerdata.v19.RefreshStateResponse
	(*RunHealthCheckRequest)(nil),                   // 25: vitess.tabletmanagerdata.v19.RunHealthCheckRequest
	(*RunHealthCheckResponse)(nil),                  // 26: vitess.tabletmanagerdata.v19.RunHealthCheckResponse
	(*ReloadSchemaRequest)(nil),                     // 27: vitess.tabletmanagerdata.v19.ReloadSchemaRequest
	(*ReloadSchemaResponse)(nil),                    // 28: vitess.tabletmanagerdata.v19.ReloadSchemaResponse
	(*PreflightSchemaRequest)(nil),                  // 29: vitess.tabletmanagerdata.v19.PreflightSchemaRequest
	(*PreflightSchemaResponse)(nil),                 // 30: vitess.tabletmanagerdata.v19.PreflightSchemaResponse
	(*ApplySchemaRequest)(nil),                      // 31: vitess.tabletmanagerdata.v19.ApplySchemaRequest
	(*ApplySchemaResponse)(nil),                     // 32: vitess.tabletmanagerdata.v19.ApplySchemaResponse
	(*LockTablesRequest)(nil),                       // 33: vitess.tabletmanagerdata.v19.LockTablesRequest
	(*LockTablesResponse)(nil),                      // 34: vitess.tabletmanagerdata.v19.LockTablesResponse
	(*UnlockTablesRequest)(nil),                     // 35: vitess.tabletmanagerdata.v19.UnlockTablesRequest
	(*UnlockTablesResponse)(nil),                    // 36: vitess.tabletmanagerdata.v19.UnlockTablesResponse
	(*ExecuteQueryRequest)(nil),                     // 37: vitess.tabletmanagerdata.v19.ExecuteQueryRequest
	(*ExecuteQueryResponse)(nil),                    // 38: vitess.tabletmanagerdata.v19.ExecuteQueryResponse
	(*ExecuteFetchAsDbaRequest)(nil),                // 39: vitess.tabletmanagerdata.v19.ExecuteFetchAsDbaRequest
	(*ExecuteFetchAsDbaResponse)(nil),               // 40: vitess.tabletmanagerdata.v19.ExecuteFetchAsDbaResponse
	(*ExecuteFetchAsAllPrivsRequest)(nil),           // 41: vitess.tabletmanagerdata.v19.ExecuteFetchAsAllPrivsRequest
	(*ExecuteFetchAsAllPrivsResponse)(nil),          // 42: vitess.tabletmanagerdata.v19.ExecuteFetchAsAllPrivsResponse
	(*ExecuteFetchAsAppRequest)(nil),                // 43: vitess.tabletmanagerdata.v19.ExecuteFetchAsAppRequest
	(*ExecuteFetchAsAppResponse)(nil),               // 44: vitess.tabletmanagerdata.v19.ExecuteFetchAsAppResponse
	(*ReplicationStatusRequest)(nil),                // 45: vitess.tabletmanagerdata.v19.ReplicationStatusRequest
	(*ReplicationStatusResponse)(nil),               // 46: vitess.tabletmanagerdata.v19.ReplicationStatusResponse
	(*PrimaryStatusRequest)(nil),                    // 47: vitess.tabletmanagerdata.v19.PrimaryStatusRequest
	(*PrimaryStatusResponse)(nil),                   // 48: vitess.tabletmanagerdata.v19.PrimaryStatusResponse
	(*PrimaryPositionRequest)(nil),                  // 49: vitess.tabletmanagerdata.v19.PrimaryPositionRequest
	(*PrimaryPositionResponse)(nil),                 // 50: vitess.tabletmanagerdata.v19.PrimaryPositionResponse
	(*WaitForPositionRequest)(nil),                  // 51: vitess.tabletmanagerdata.v19.WaitForPositionRequest
	(*WaitForPositionResponse)(nil),                 // 52: vitess.tabletmanagerdata.v19.WaitForPositionResponse
	(*StopReplicationRequest)(nil),                  // 53: vitess.tabletmanagerdata.v19.StopReplicationRequest
	(*StopReplicationResponse)(nil),                 // 54: vitess.tabletmanagerdata.v19.StopReplicationResponse
	(*StopReplicationMinimumRequest)(nil),           // 55: vitess.tabletmanagerdata.v19.StopReplicationMinimumRequest
	(*StopReplicationMinimumResponse)(nil),          // 56: vitess.tabletmanagerdata.v19.StopReplicationMinimumResponse
	(*StartReplicationRequest)(nil),                 // 57: vitess.tabletmanagerdata.v19.StartReplicationRequest
	(*StartReplicationResponse)(nil),                // 58: vitess.tabletmanagerdata.v19.StartReplicationResponse
	(*StartReplicationUntilAfterRequest)(nil),       // 59: vitess.tabletmanagerdata.v19.StartReplicationUntilAfterRequest
	(*StartReplicationUntilAfterResponse)(nil),      // 60: vitess.tabletmanagerdata.v19.StartReplicationUntilAfterResponse
	(*GetReplicasRequest)(nil),                      // 61: vitess.tabletmanagerdata.v19.GetReplicasRequest
	(*GetReplicasResponse)(nil),                     // 62: vitess.tabletmanagerdata.v19.GetReplicasResponse
	(*ResetReplicationRequest)(nil),                 // 63: vitess.tabletmanagerdata.v19.ResetReplicationRequest
	(*ResetReplicationResponse)(nil),                // 64: vitess.tabletmanagerdata.v19.ResetReplicationResponse
	(*VReplicationExecRequest)(nil),                 // 65: vitess.tabletmanagerdata.v19.VReplicationExecRequest
	(*VReplicationExecResponse)(nil),                // 66: vitess.tabletmanagerdata.v19.VReplicationExecResponse
	(*VReplicationWaitForPosRequest)(nil),           // 67: vitess.tabletmanagerdata.v19.VReplicationWaitForPosRequest
	(*VReplicationWaitForPosResponse)(nil),          // 68: vitess.tabletmanagerdata.v19.VReplicationWaitForPosResponse
	(*InitPrimaryRequest)(nil),                      // 69: vitess.tabletmanagerdata.v19.InitPrimaryRequest
	(*InitPrimaryResponse)(nil),                     // 70: vitess.tabletmanagerdata.v19.InitPrimaryResponse
	(*PopulateReparentJournalRequest)(nil),          // 71: vitess.tabletmanagerdata.v19.PopulateReparentJournalRequest
	(*PopulateReparentJournalResponse)(nil),         // 72: vitess.tabletmanagerdata.v19.PopulateReparentJournalResponse
	(*InitReplicaRequest)(nil),                      // 73: vitess.tabletmanagerdata.v19.InitReplicaRequest
	(*InitReplicaResponse)(nil),                     // 74: vitess.tabletmanagerdata.v19.InitReplicaResponse
	(*DemotePrimaryRequest)(nil),                    // 75: vitess.tabletmanagerdata.v19.DemotePrimaryRequest
	(*DemotePrimaryResponse)(nil),                   // 76: vitess.tabletmanagerdata.v19.DemotePrimaryResponse
	(*UndoDemotePrimaryRequest)(nil),                // 77: vitess.tabletmanagerdata.v19.UndoDemotePrimaryRequest
	(*UndoDemotePrimaryResponse)(nil),               // 78: vitess.tabletmanagerdata.v19.UndoDemotePrimaryResponse
	(*ReplicaWasPromotedRequest)(nil),               // 79: vitess.tabletmanagerdata.v19.ReplicaWasPromotedRequest
	(*ReplicaWasPromotedResponse)(nil),              // 80: vitess.tabletmanagerdata.v19.ReplicaWasPromotedResponse
	(*ResetReplicationParametersRequest)(nil),       // 81: vitess.tabletmanagerdata.v19.ResetReplicationParametersRequest
	(*ResetReplicationParametersResponse)(nil),      // 82: vitess.tabletmanagerdata.v19.ResetReplicationParametersResponse
	(*FullStatusRequest)(nil),                       // 83: vitess.tabletmanagerdata.v19.FullStatusRequest
	(*FullStatusResponse)(nil),                      // 84: vitess.tabletmanagerdata.v19.FullStatusResponse
	(*SetReplicationSourceRequest)(nil),             // 85: vitess.tabletmanagerdata.v19.SetReplicationSourceRequest
	(*SetReplicationSourceResponse)(nil),            // 86: vitess.tabletmanagerdata.v19.SetReplicationSourceResponse
	(*ReplicaWasRestartedRequest)(nil),              // 87: vitess.tabletmanagerdata.v19.ReplicaWasRestartedRequest
	(*ReplicaWasRestartedResponse)(nil),             // 88: vitess.tabletmanagerdata.v19.ReplicaWasRestartedResponse
	(*StopReplicationAndGetStatusRequest)(nil),      // 89: vitess.tabletmanagerdata.v19.StopReplicationAndGetStatusRequest
	(*StopReplicationAndGetStatusResponse)(nil),     // 90: vitess.tabletmanagerdata.v19.StopReplicationAndGetStatusResponse
	(*PromoteReplicaRequest)(nil),                   // 91: vitess.tabletmanagerdata.v19.PromoteReplicaRequest
	(*PromoteReplicaResponse)(nil),                  // 92: vitess.tabletmanagerdata.v19.PromoteReplicaResponse
	(*BackupRequest)(nil),                           // 93: vitess.tabletmanagerdata.v19.BackupRequest
	(*BackupResponse)(nil),                          // 94: vitess.tabletmanagerdata.v19.BackupResponse
	(*RestoreFromBackupRequest)(nil),                // 95: vitess.tabletmanagerdata.v19.RestoreFromBackupRequest
	(*RestoreFromBackupResponse)(nil),               // 96: vitess.tabletmanagerdata.v19.RestoreFromBackupResponse
	(*CreateVReplicationWorkflowRequest)(nil),       // 97: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowRequest
	(*CreateVReplicationWorkflowResponse)(nil),      // 98: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowResponse
	(*DeleteVReplicationWorkflowRequest)(nil),       // 99: vitess.tabletmanagerdata.v19.DeleteVReplicationWorkflowRequest
	(*DeleteVReplicationWorkflowResponse)(nil),      // 100: vitess.tabletmanagerdata.v19.DeleteVReplicationWorkflowResponse
	(*ReadVReplicationWorkflowRequest)(nil),         // 101: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowRequest
	(*ReadVReplicationWorkflowResponse)(nil),        // 102: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse
	(*VDiffRequest)(nil),                            // 103: vitess.tabletmanagerdata.v19.VDiffRequest
	(*VDiffResponse)(nil),                           // 104: vitess.tabletmanagerdata.v19.VDiffResponse
	(*VDiffPickerOptions)(nil),                      // 105: vitess.tabletmanagerdata.v19.VDiffPickerOptions
	(*VDiffReportOptions)(nil),                      // 106: vitess.tabletmanagerdata.v19.VDiffReportOptions
	(*VDiffCoreOptions)(nil),                        // 107: vitess.tabletmanagerdata.v19.VDiffCoreOptions
	(*VDiffOptions)(nil),                            // 108: vitess.tabletmanagerdata.v19.VDiffOptions
	(*UpdateVReplicationWorkflowRequest)(nil),       // 109: vitess.tabletmanagerdata.v19.UpdateVReplicationWorkflowRequest
	(*UpdateVReplicationWorkflowResponse)(nil),      // 110: vitess.tabletmanagerdata.v19.UpdateVReplicationWorkflowResponse
	(*ResetSequencesRequest)(nil),                   // 111: vitess.tabletmanagerdata.v19.ResetSequencesRequest
	(*ResetSequencesResponse)(nil),                  // 112: vitess.tabletmanagerdata.v19.ResetSequencesResponse
	(*CheckThrottlerRequest)(nil),                   // 113: vitess.tabletmanagerdata.v19.CheckThrottlerRequest
	(*CheckThrottlerResponse)(nil),                  // 114: vitess.tabletmanagerdata.v19.CheckThrottlerResponse
	nil,                                             // 115: vitess.tabletmanagerdata.v19.UserPermission.PrivilegesEntry
	nil,                                             // 116: vitess.tabletmanagerdata.v19.DbPermission.PrivilegesEntry
	nil,                                             // 117: vitess.tabletmanagerdata.v19.ExecuteHookRequest.ExtraEnvEntry
	(*ReadVReplicationWorkflowResponse_Stream)(nil), // 118: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream
	(*v19.Field)(nil),                               // 119: vitess.query.v19.Field
	(v191.TabletType)(0),                            // 120: vitess.topodata.v19.TabletType
	(*v192.CallerID)(nil),                           // 121: vitess.vtrpc.v19.CallerID
	(*v19.QueryResult)(nil),                         // 122: vitess.query.v19.QueryResult
	(*v193.Status)(nil),                             // 123: vitess.replicationdata.v19.Status
	(*v193.PrimaryStatus)(nil),                      // 124: vitess.replicationdata.v19.PrimaryStatus
	(*v191.TabletAlias)(nil),                        // 125: vitess.topodata.v19.TabletAlias
	(*v193.FullStatus)(nil),                         // 126: vitess.replicationdata.v19.FullStatus
	(v193.StopReplicationMode)(0),                   // 127: vitess.replicationdata.v19.StopReplicationMode
	(*v193.StopReplicationStatus)(nil),              // 128: vitess.replicationdata.v19.StopReplicationStatus
	(*v194.Event)(nil),                              // 129: vitess.logutil.v19.Event
	(*v195.Time)(nil),                               // 130: vitess.vttime.v19.Time
	(*v196.BinlogSource)(nil),                       // 131: vitess.binlogdata.v19.BinlogSource
	(v196.VReplicationWorkflowType)(0),              // 132: vitess.binlogdata.v19.VReplicationWorkflowType
	(v196.VReplicationWorkflowSubType)(0),           // 133: vitess.binlogdata.v19.VReplicationWorkflowSubType
	(v196.OnDDLAction)(0),                           // 134: vitess.binlogdata.v19.OnDDLAction
	(v196.VReplicationWorkflowState)(0),             // 135: vitess.binlogdata.v19.VReplicationWorkflowState
}
var file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_depIdxs = []int32{
	119, // 0: vitess.tabletmanagerdata.v19.TableDefinition.fields:type_name -> vitess.query.v19.Field
	1,   // 1: vitess.tabletmanagerdata.v19.SchemaDefinition.table_definitions:type_name -> vitess.tabletmanagerdata.v19.TableDefinition
	2,   // 2: vitess.tabletmanagerdata.v19.SchemaChangeResult.before_schema:type_name -> vitess.tabletmanagerdata.v19.SchemaDefinition
	2,   // 3: vitess.tabletmanagerdata.v19.SchemaChangeResult.after_schema:type_name -> vitess.tabletmanagerdata.v19.SchemaDefinition
	115, // 4: vitess.tabletmanagerdata.v19.UserPermission.privileges:type_name -> vitess.tabletmanagerdata.v19.UserPermission.PrivilegesEntry
	116, // 5: vitess.tabletmanagerdata.v19.DbPermission.privileges:type_name -> vitess.tabletmanagerdata.v19.DbPermission.PrivilegesEntry
	4,   // 6: vitess.tabletmanagerdata.v19.Permissions.user_permissions:type_name -> vitess.tabletmanagerdata.v19.UserPermission
	5,   // 7: vitess.tabletmanagerdata.v19.Permissions.db_permissions:type_name -> vitess.tabletmanagerdata.v19.DbPermission
	117, // 8: vitess.tabletmanagerdata.v19.ExecuteHookRequest.extra_env:type_name -> vitess.tabletmanagerdata.v19.ExecuteHookRequest.ExtraEnvEntry
	2,   // 9: vitess.tabletmanagerdata.v19.GetSchemaResponse.schema_definition:type_name -> vitess.tabletmanagerdata.v19.SchemaDefinition
	6,   // 10: vitess.tabletmanagerdata.v19.GetPermissionsResponse.permissions:type_name -> vitess.tabletmanagerdata.v19.Permissions
	120, // 11: vitess.tabletmanagerdata.v19.ChangeTypeRequest.tablet_type:type_name -> vitess.topodata.v19.TabletType
	3,   // 12: vitess.tabletmanagerdata.v19.PreflightSchemaResponse.change_results:type_name -> vitess.tabletmanagerdata.v19.SchemaChangeResult
	2,   // 13: vitess.tabletmanagerdata.v19.ApplySchemaRequest.before_schema:type_name -> vitess.tabletmanagerdata.v19.SchemaDefinition
	2,   // 14: vitess.tabletmanagerdata.v19.ApplySchemaRequest.after_schema:type_name -> vitess.tabletmanagerdata.v19.SchemaDefinition
	2,   // 15: vitess.tabletmanagerdata.v19.ApplySchemaResponse.before_schema:type_name -> vitess.tabletmanagerdata.v19.SchemaDefinition
	2,   // 16: vitess.tabletmanagerdata.v19.ApplySchemaResponse.after_schema:type_name -> vitess.tabletmanagerdata.v19.SchemaDefinition
	121, // 17: vitess.tabletmanagerdata.v19.ExecuteQueryRequest.caller_id:type_name -> vitess.vtrpc.v19.CallerID
	122, // 18: vitess.tabletmanagerdata.v19.ExecuteQueryResponse.result:type_name -> vitess.query.v19.QueryResult
	122, // 19: vitess.tabletmanagerdata.v19.ExecuteFetchAsDbaResponse.result:type_name -> vitess.query.v19.QueryResult
	122, // 20: vitess.tabletmanagerdata.v19.ExecuteFetchAsAllPrivsResponse.result:type_name -> vitess.query.v19.QueryResult
	122, // 21: vitess.tabletmanagerdata.v19.ExecuteFetchAsAppResponse.result:type_name -> vitess.query.v19.QueryResult
	123, // 22: vitess.tabletmanagerdata.v19.ReplicationStatusResponse.status:type_name -> vitess.replicationdata.v19.Status
	124, // 23: vitess.tabletmanagerdata.v19.PrimaryStatusResponse.status:type_name -> vitess.replicationdata.v19.PrimaryStatus
	122, // 24: vitess.tabletmanagerdata.v19.VReplicationExecResponse.result:type_name -> vitess.query.v19.QueryResult
	125, // 25: vitess.tabletmanagerdata.v19.PopulateReparentJournalRequest.primary_alias:type_name -> vitess.topodata.v19.TabletAlias
	125, // 26: vitess.tabletmanagerdata.v19.InitReplicaRequest.parent:type_name -> vitess.topodata.v19.TabletAlias
	124, // 27: vitess.tabletmanagerdata.v19.DemotePrimaryResponse.primary_status:type_name -> vitess.replicationdata.v19.PrimaryStatus
	126, // 28: vitess.tabletmanagerdata.v19.FullStatusResponse.status:type_name -> vitess.replicationdata.v19.FullStatus
	125, // 29: vitess.tabletmanagerdata.v19.SetReplicationSourceRequest.parent:type_name -> vitess.topodata.v19.TabletAlias
	125, // 30: vitess.tabletmanagerdata.v19.ReplicaWasRestartedRequest.parent:type_name -> vitess.topodata.v19.TabletAlias
	127, // 31: vitess.tabletmanagerdata.v19.StopReplicationAndGetStatusRequest.stop_replication_mode:type_name -> vitess.replicationdata.v19.StopReplicationMode
	128, // 32: vitess.tabletmanagerdata.v19.StopReplicationAndGetStatusResponse.status:type_name -> vitess.replicationdata.v19.StopReplicationStatus
	129, // 33: vitess.tabletmanagerdata.v19.BackupResponse.event:type_name -> vitess.logutil.v19.Event
	130, // 34: vitess.tabletmanagerdata.v19.RestoreFromBackupRequest.backup_time:type_name -> vitess.vttime.v19.Time
	130, // 35: vitess.tabletmanagerdata.v19.RestoreFromBackupRequest.restore_to_timestamp:type_name -> vitess.vttime.v19.Time
	129, // 36: vitess.tabletmanagerdata.v19.RestoreFromBackupResponse.event:type_name -> vitess.logutil.v19.Event
	131, // 37: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowRequest.binlog_source:type_name -> vitess.binlogdata.v19.BinlogSource
	120, // 38: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowRequest.tablet_types:type_name -> vitess.topodata.v19.TabletType
	0,   // 39: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowRequest.tablet_selection_preference:type_name -> vitess.tabletmanagerdata.v19.TabletSelectionPreference
	132, // 40: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowRequest.workflow_type:type_name -> vitess.binlogdata.v19.VReplicationWorkflowType
	133, // 41: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowRequest.workflow_sub_type:type_name -> vitess.binlogdata.v19.VReplicationWorkflowSubType
	122, // 42: vitess.tabletmanagerdata.v19.CreateVReplicationWorkflowResponse.result:type_name -> vitess.query.v19.QueryResult
	122, // 43: vitess.tabletmanagerdata.v19.DeleteVReplicationWorkflowResponse.result:type_name -> vitess.query.v19.QueryResult
	120, // 44: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.tablet_types:type_name -> vitess.topodata.v19.TabletType
	0,   // 45: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.tablet_selection_preference:type_name -> vitess.tabletmanagerdata.v19.TabletSelectionPreference
	132, // 46: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.workflow_type:type_name -> vitess.binlogdata.v19.VReplicationWorkflowType
	133, // 47: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.workflow_sub_type:type_name -> vitess.binlogdata.v19.VReplicationWorkflowSubType
	118, // 48: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.streams:type_name -> vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream
	108, // 49: vitess.tabletmanagerdata.v19.VDiffRequest.options:type_name -> vitess.tabletmanagerdata.v19.VDiffOptions
	122, // 50: vitess.tabletmanagerdata.v19.VDiffResponse.output:type_name -> vitess.query.v19.QueryResult
	105, // 51: vitess.tabletmanagerdata.v19.VDiffOptions.picker_options:type_name -> vitess.tabletmanagerdata.v19.VDiffPickerOptions
	107, // 52: vitess.tabletmanagerdata.v19.VDiffOptions.core_options:type_name -> vitess.tabletmanagerdata.v19.VDiffCoreOptions
	106, // 53: vitess.tabletmanagerdata.v19.VDiffOptions.report_options:type_name -> vitess.tabletmanagerdata.v19.VDiffReportOptions
	120, // 54: vitess.tabletmanagerdata.v19.UpdateVReplicationWorkflowRequest.tablet_types:type_name -> vitess.topodata.v19.TabletType
	0,   // 55: vitess.tabletmanagerdata.v19.UpdateVReplicationWorkflowRequest.tablet_selection_preference:type_name -> vitess.tabletmanagerdata.v19.TabletSelectionPreference
	134, // 56: vitess.tabletmanagerdata.v19.UpdateVReplicationWorkflowRequest.on_ddl:type_name -> vitess.binlogdata.v19.OnDDLAction
	135, // 57: vitess.tabletmanagerdata.v19.UpdateVReplicationWorkflowRequest.state:type_name -> vitess.binlogdata.v19.VReplicationWorkflowState
	122, // 58: vitess.tabletmanagerdata.v19.UpdateVReplicationWorkflowResponse.result:type_name -> vitess.query.v19.QueryResult
	131, // 59: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream.bls:type_name -> vitess.binlogdata.v19.BinlogSource
	130, // 60: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream.time_updated:type_name -> vitess.vttime.v19.Time
	130, // 61: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream.transaction_timestamp:type_name -> vitess.vttime.v19.Time
	135, // 62: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream.state:type_name -> vitess.binlogdata.v19.VReplicationWorkflowState
	130, // 63: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream.time_heartbeat:type_name -> vitess.vttime.v19.Time
	130, // 64: vitess.tabletmanagerdata.v19.ReadVReplicationWorkflowResponse.Stream.time_throttled:type_name -> vitess.vttime.v19.Time
	65,  // [65:65] is the sub-list for method output_type
	65,  // [65:65] is the sub-list for method input_type
	65,  // [65:65] is the sub-list for extension type_name
	65,  // [65:65] is the sub-list for extension extendee
	0,   // [0:65] is the sub-list for field type_name
}

func init() { file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_init() }
func file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_init() {
	if File_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDesc), len(file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   118,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_goTypes,
		DependencyIndexes: file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_depIdxs,
		EnumInfos:         file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_enumTypes,
		MessageInfos:      file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_msgTypes,
	}.Build()
	File_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto = out.File
	file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_goTypes = nil
	file_vitess_tabletmanagerdata_v19_tabletmanagerdata_proto_depIdxs = nil
}
